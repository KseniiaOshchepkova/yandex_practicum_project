{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **Оглавление**\n",
    "\n",
    "### **[Введение](#1)**\n",
    "### **1. [Обзор данных](#2)**  \n",
    "### **2. [Предобработка данных](#3)**  \n",
    "    2.1 Обработка пропусков\n",
    "    2.2 Обработка некорректных значений\n",
    "    2.3 Замена типа данных  \n",
    "    2.4 Обработка дубликатов\n",
    "    2.5 Лемматизация\n",
    "    2.6 Категоризация данных\n",
    "### **3. [Проверка гипотезы](#4)**  \n",
    "### **[Итоги исследования](#5)**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Исследование надёжности заёмщиков"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Введение  <a id='1'></a>\n",
    "Заказчик — кредитный отдел банка. Входные данные от банка — статистика о платёжеспособности клиентов.\n",
    "\n",
    "Результаты исследования будут учтены при построении модели **кредитного скоринга** — специальной системы, которая оценивает способность потенциального заёмщика вернуть кредит банку.  \n",
    "\n",
    "**Цель исследования** — проверить гипотезу: семейное положение и количество детей клиента влияет на факт погашения кредита в срок.  \n",
    "\n",
    "Исследование проводится в три этапа:\n",
    "\n",
    "1. Обзор данных.\n",
    "2. Предобработка данных.\n",
    "3. Проверка гипотезы."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Обзор данных <a id='2'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ознакомимся с входными данными."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "#импортируем библиотеки\n",
    "import pandas as pd\n",
    "\n",
    "from pymystem3 import Mystem\n",
    "m = Mystem()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      "children            21525 non-null int64\n",
      "days_employed       19351 non-null float64\n",
      "dob_years           21525 non-null int64\n",
      "education           21525 non-null object\n",
      "education_id        21525 non-null int64\n",
      "family_status       21525 non-null object\n",
      "family_status_id    21525 non-null int64\n",
      "gender              21525 non-null object\n",
      "income_type         21525 non-null object\n",
      "debt                21525 non-null int64\n",
      "total_income        19351 non-null float64\n",
      "purpose             21525 non-null object\n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    }
   ],
   "source": [
    "data = pd.read_csv('/datasets/data.csv') #прочитаем файл с данными и сохраним его в переменной data\n",
    "data.info() #получим общую информацию о таблице"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>-8437.673028</td>\n",
       "      <td>42</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875.639453</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-4024.803754</td>\n",
       "      <td>36</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080.014102</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>-5623.422610</td>\n",
       "      <td>33</td>\n",
       "      <td>Среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885.952297</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>-4124.747207</td>\n",
       "      <td>32</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628.550329</td>\n",
       "      <td>дополнительное образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>340266.072047</td>\n",
       "      <td>53</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616.077870</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years education  education_id  \\\n",
       "0         1   -8437.673028         42    высшее             0   \n",
       "1         1   -4024.803754         36   среднее             1   \n",
       "2         0   -5623.422610         33   Среднее             1   \n",
       "3         3   -4124.747207         32   среднее             1   \n",
       "4         0  340266.072047         53   среднее             1   \n",
       "\n",
       "      family_status  family_status_id gender income_type  debt   total_income  \\\n",
       "0   женат / замужем                 0      F   сотрудник     0  253875.639453   \n",
       "1   женат / замужем                 0      F   сотрудник     0  112080.014102   \n",
       "2   женат / замужем                 0      M   сотрудник     0  145885.952297   \n",
       "3   женат / замужем                 0      M   сотрудник     0  267628.550329   \n",
       "4  гражданский брак                 1      F   пенсионер     0  158616.077870   \n",
       "\n",
       "                      purpose  \n",
       "0               покупка жилья  \n",
       "1     приобретение автомобиля  \n",
       "2               покупка жилья  \n",
       "3  дополнительное образование  \n",
       "4             сыграть свадьбу  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head() #просмотрим первые пять строк таблицы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Согласно документации к данным:  \n",
    "\n",
    "- children — количество детей в семье\n",
    "- days_employed — общий трудовой стаж в днях\n",
    "- dob_years — возраст клиента в годах\n",
    "- education — уровень образования клиента\n",
    "- education_id — идентификатор уровня образования\n",
    "- family_status — семейное положение\n",
    "- family_status_id — идентификатор семейного положения\n",
    "- gender — пол клиента\n",
    "- income_type — тип занятости\n",
    "- debt — имел ли задолженность по возврату кредитов, где 0 - это отсутствие задолжности, а 1 - наличие задолженности.\n",
    "- total_income — ежемесячный доход\n",
    "- purpose — цель получения кредита\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "\n",
    "В таблице 12 столбцов, названия столбцов написаны корректно.\n",
    "\n",
    "Количество non-null значений в столбцах различается, следовательно в столбцах days_employed и total_income есть пропуски. В колонках days_employed и total_income лучше поменять тип данных на int64, убрать дробную часть. Встречаются некорректные значения и дубликаты.  \n",
    "\n",
    "В каждой строке таблицы — данные о клиенте банка. Колонки описывают возраст клиента, пол, его образование, тип занятости, трудовой стаж, ежемесячный доход, семейный статус и кол-во детей, а также цель получения кредита и наличие/отсутствие задолженности."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Предобработка данных <a id='3'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обработка пропусков"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Посчитаем количество пропусков в каждом столбце"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children               0\n",
       "days_employed       2174\n",
       "dob_years              0\n",
       "education              0\n",
       "education_id           0\n",
       "family_status          0\n",
       "family_status_id       0\n",
       "gender                 0\n",
       "income_type            0\n",
       "debt                   0\n",
       "total_income        2174\n",
       "purpose                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isna().sum() # подсчёт пропусков"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Количество пропусков days_employed и total_income совпадает, возможно, это одни и те же строки. Количество строк с пропусками в каждом из этих столбцов составляет примерно 10% (21525/2174*100), поэтому просто удалить строку с недостающими данными мы не можем, это может повлиять на результаты исследования.  \n",
    "\n",
    "В столбце days_employed, помимо большого количества пропусков, некоторые значения указаны некорректно, а также сами значения в формате, который трудно сопоставить с количеством дней. Так как эти данные не важны для исследования, столбец можно удалить.  \n",
    "\n",
    "Пропуски в столбце total_income можно восстановить медианными значениями по срезам."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Удалим столбец days_employed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['children', 'dob_years', 'education', 'education_id', 'family_status',\n",
       "       'family_status_id', 'gender', 'income_type', 'debt', 'total_income',\n",
       "       'purpose'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = data.drop(['days_employed'], axis = 1) #удаление столбца days_employed\n",
    "data.columns #выведем названия всех столбцов, чтобы увидеть, что столбец days_employed отсутствует"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Определим причину пропусков в столбце total_income\n",
    "\n",
    "- посмотрим, как пропуски распределены в столбце total_income\n",
    "- сравним доли типов занятости в пропущенных значениях с долями типов занятости в исходной таблице"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "сотрудник          0.508280\n",
       "компаньон          0.233671\n",
       "пенсионер          0.189972\n",
       "госслужащий        0.067617\n",
       "предприниматель    0.000460\n",
       "Name: income_type, dtype: float64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_total_income = data[data['total_income'].isna()]\n",
    "#найдем пропуски в столбце total_income и сохраним их в переменную data_total_income\n",
    "\n",
    "data_total_income['income_type'].value_counts(normalize=True)\n",
    "#найдем долю каждого типа занятости в общем количестве пропусков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "сотрудник          0.516562\n",
       "компаньон          0.236237\n",
       "пенсионер          0.179141\n",
       "госслужащий        0.067782\n",
       "безработный        0.000093\n",
       "предприниматель    0.000093\n",
       "в декрете          0.000046\n",
       "студент            0.000046\n",
       "Name: income_type, dtype: float64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['income_type'].value_counts(normalize=True) #найдем доли каждого типа занятости в исходной таблице"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Результаты сравнения показывают, что больше всего пропусков встречается в строках с типом занятости \"сотрудник\". Характер распределения всех доль типов занятости в обоих случаях очень похож, поэтому мы можем сделать вывод, что пропуски в столбцах total_income, скорее всего, случайные."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Заменим пропуски в столбце total_income"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['total_income'] = data['total_income'].fillna(data.groupby(['income_type', 'education', 'gender'])['total_income'].transform('median'))\n",
    "#заменим пропуски в столбце total_income на медианное значение в разрезе групп по типу занятости, образовению и полу."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Убедимся, что в таблице не осталось пропусков. Для этого ещё раз посчитаем пропущенные значения."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children            0\n",
       "dob_years           0\n",
       "education           0\n",
       "education_id        0\n",
       "family_status       0\n",
       "family_status_id    0\n",
       "gender              0\n",
       "income_type         0\n",
       "debt                0\n",
       "total_income        1\n",
       "purpose             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isna().sum() #посчитаем сумму пропусков в каждом столбце"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Остался один пропуск. Посмотрим на эту строку."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5936</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>предприниматель</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>покупка жилой недвижимости</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      children  dob_years education  education_id    family_status  \\\n",
       "5936         0         58    высшее             0  женат / замужем   \n",
       "\n",
       "      family_status_id gender      income_type  debt  total_income  \\\n",
       "5936                 0      M  предприниматель     0           NaN   \n",
       "\n",
       "                         purpose  \n",
       "5936  покупка жилой недвижимости  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[data['total_income'].isna()] #выведем строку с пропуском"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Скорее всего, тип занятости \"предпринематель\" не удалось объединить в группы, поэтому не получилось заполнить пропуск."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "сотрудник          11119\n",
       "компаньон           5085\n",
       "пенсионер           3856\n",
       "госслужащий         1459\n",
       "безработный            2\n",
       "предприниматель        2\n",
       "в декрете              1\n",
       "студент                1\n",
       "Name: income_type, dtype: int64"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['income_type'].value_counts() #выведем все уникальные значения столбца total_income и количество их упоминаний."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\"Предпринематель\" встречается два раза. Посмотрим на эти строки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5936</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>предприниматель</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>покупка жилой недвижимости</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18697</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>предприниматель</td>\n",
       "      <td>0</td>\n",
       "      <td>499163.144947</td>\n",
       "      <td>на проведение свадьбы</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       children  dob_years education  education_id     family_status  \\\n",
       "5936          0         58    высшее             0   женат / замужем   \n",
       "18697         0         27    высшее             0  гражданский брак   \n",
       "\n",
       "       family_status_id gender      income_type  debt   total_income  \\\n",
       "5936                  0      M  предприниматель     0            NaN   \n",
       "18697                 1      F  предприниматель     0  499163.144947   \n",
       "\n",
       "                          purpose  \n",
       "5936   покупка жилой недвижимости  \n",
       "18697       на проведение свадьбы  "
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.loc[data.loc[:, 'income_type'] == 'предприниматель'] #выведем все строки, где тип занятости - \"предприниматель\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Главные показатели для исследования children и family_status у обоих \"предпринимателей\" схожи. Заменим пропуск в доходе в строке 5936 на значение в строке 18697."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['total_income'] = data['total_income'].fillna(499163.144947) #заменим пропущенное значение на доход из строки 18697"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Убедимся, что замена произошла."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5936</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>предприниматель</td>\n",
       "      <td>0</td>\n",
       "      <td>499163.144947</td>\n",
       "      <td>покупка жилой недвижимости</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18697</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>предприниматель</td>\n",
       "      <td>0</td>\n",
       "      <td>499163.144947</td>\n",
       "      <td>на проведение свадьбы</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       children  dob_years education  education_id     family_status  \\\n",
       "5936          0         58    высшее             0   женат / замужем   \n",
       "18697         0         27    высшее             0  гражданский брак   \n",
       "\n",
       "       family_status_id gender      income_type  debt   total_income  \\\n",
       "5936                  0      M  предприниматель     0  499163.144947   \n",
       "18697                 1      F  предприниматель     0  499163.144947   \n",
       "\n",
       "                          purpose  \n",
       "5936   покупка жилой недвижимости  \n",
       "18697       на проведение свадьбы  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.loc[data.loc[:, 'income_type'] == 'предприниматель'] #выведем все строки, где тип занятости - \"предприниматель\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Выведем общую информацию о таблице, чтобы убедиться, что во всех столбцах пропуски отсутствуют."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 11 columns):\n",
      "children            21525 non-null int64\n",
      "dob_years           21525 non-null int64\n",
      "education           21525 non-null object\n",
      "education_id        21525 non-null int64\n",
      "family_status       21525 non-null object\n",
      "family_status_id    21525 non-null int64\n",
      "gender              21525 non-null object\n",
      "income_type         21525 non-null object\n",
      "debt                21525 non-null int64\n",
      "total_income        21525 non-null float64\n",
      "purpose             21525 non-null object\n",
      "dtypes: float64(1), int64(5), object(5)\n",
      "memory usage: 1.8+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info() #получаем общую информацию о таблице"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обработка некорректных значений в столбцах"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Просмотрим уникальные значения во всех столбцах кроме income_type и total_income, чтобы найти некорректные значения."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "children :  [ 1  0  3  2 -1  4 20  5]\n",
      "\n",
      "dob_years :  [42 36 33 32 53 27 43 50 35 41 40 65 54 56 26 48 24 21 57 67 28 63 62 47\n",
      " 34 68 25 31 30 20 49 37 45 61 64 44 52 46 23 38 39 51  0 59 29 60 55 58\n",
      " 71 22 73 66 69 19 72 70 74 75]\n",
      "\n",
      "education :  ['высшее' 'среднее' 'Среднее' 'СРЕДНЕЕ' 'ВЫСШЕЕ' 'неоконченное высшее'\n",
      " 'начальное' 'Высшее' 'НЕОКОНЧЕННОЕ ВЫСШЕЕ' 'Неоконченное высшее'\n",
      " 'НАЧАЛЬНОЕ' 'Начальное' 'Ученая степень' 'УЧЕНАЯ СТЕПЕНЬ'\n",
      " 'ученая степень']\n",
      "\n",
      "education_id :  [0 1 2 3 4]\n",
      "\n",
      "family_status :  ['женат / замужем' 'гражданский брак' 'вдовец / вдова' 'в разводе'\n",
      " 'Не женат / не замужем']\n",
      "\n",
      "family_status_id :  [0 1 2 3 4]\n",
      "\n",
      "gender :  ['F' 'M' 'XNA']\n",
      "\n",
      "debt :  [0 1]\n",
      "\n",
      "purpose :  ['покупка жилья' 'приобретение автомобиля' 'дополнительное образование'\n",
      " 'сыграть свадьбу' 'операции с жильем' 'образование'\n",
      " 'на проведение свадьбы' 'покупка жилья для семьи' 'покупка недвижимости'\n",
      " 'покупка коммерческой недвижимости' 'покупка жилой недвижимости'\n",
      " 'строительство собственной недвижимости' 'недвижимость'\n",
      " 'строительство недвижимости' 'на покупку подержанного автомобиля'\n",
      " 'на покупку своего автомобиля' 'операции с коммерческой недвижимостью'\n",
      " 'строительство жилой недвижимости' 'жилье'\n",
      " 'операции со своей недвижимостью' 'автомобили' 'заняться образованием'\n",
      " 'сделка с подержанным автомобилем' 'получение образования' 'автомобиль'\n",
      " 'свадьба' 'получение дополнительного образования' 'покупка своего жилья'\n",
      " 'операции с недвижимостью' 'получение высшего образования'\n",
      " 'свой автомобиль' 'сделка с автомобилем' 'профильное образование'\n",
      " 'высшее образование' 'покупка жилья для сдачи' 'на покупку автомобиля'\n",
      " 'ремонт жилью' 'заняться высшим образованием']\n",
      "\n"
     ]
    }
   ],
   "source": [
    "unique_colomns = data.drop(['income_type', 'total_income'], axis=1)\n",
    "#сохраним в переменную unique_colomns таблицу со всеми столбцами, кроме income_type и total_income\n",
    "for col in unique_colomns: #создаем цикл, который выведет уникальные значения по всем столбцам\n",
    "    print(col, ': ', data[col].unique())\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1) В столбце children встречаются такие значения как -1 и 20, которые нужно заменить на 1 и 2 соответственно."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['children'] = data['children'].replace(-1,1) #заменяем -1 на 1 в столбце children\n",
    "data['children'] = data['children'].replace(20,2) #заменяем 20 на 2 в столбце children"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2) В столбце dob_years видим, что есть возраст равный 0. Выведем уникальные значения и количество их упоминаний, чтобы понять как часто 0 встречается в значениях."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "35    617\n",
       "40    609\n",
       "41    607\n",
       "34    603\n",
       "38    598\n",
       "42    597\n",
       "33    581\n",
       "39    573\n",
       "31    560\n",
       "36    555\n",
       "44    547\n",
       "29    545\n",
       "30    540\n",
       "48    538\n",
       "37    537\n",
       "50    514\n",
       "43    513\n",
       "32    510\n",
       "49    508\n",
       "28    503\n",
       "45    497\n",
       "27    493\n",
       "56    487\n",
       "52    484\n",
       "47    480\n",
       "54    479\n",
       "46    475\n",
       "58    461\n",
       "57    460\n",
       "53    459\n",
       "51    448\n",
       "59    444\n",
       "55    443\n",
       "26    408\n",
       "60    377\n",
       "25    357\n",
       "61    355\n",
       "62    352\n",
       "63    269\n",
       "64    265\n",
       "24    264\n",
       "23    254\n",
       "65    194\n",
       "66    183\n",
       "22    183\n",
       "67    167\n",
       "21    111\n",
       "0     101\n",
       "68     99\n",
       "69     85\n",
       "70     65\n",
       "71     58\n",
       "20     51\n",
       "72     33\n",
       "19     14\n",
       "73      8\n",
       "74      6\n",
       "75      1\n",
       "Name: dob_years, dtype: int64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['dob_years'].value_counts() #выводим уникальные значения столбца dob_years и кол-во их упоминаний"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "0 встречается 101 раз, что составляет всего 0,5% (101/21525*100) от общего количества строк. При этом, возраст не является приоритетным критерием в определении платёжеспособности клиентов. Поэтому оставляем значения равные 0. Это не повлияет на результаты исследования."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3) В столбце gender есть значение 'XNA', которое лучше заменить на понятное 'unknow'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['gender'] = data['gender'].replace('XNA', 'unknow') #заменим значение 'XNA' на 'unknow'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4) В столбце family_status приведем написание 'Не женат / не замужем' к единому стилю. Приведем все строки в столбце family_status к нижнему регистру."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['family_status'] = data['family_status'].str.lower() #приведем строки к нижнему регистру"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В остальных столбцах все значения корректны.  \n",
    "Снова выведем уникальные значения, чтобы удостовериться, что данные были изменены."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "children :  [1 0 3 2 4 5]\n",
      "\n",
      "dob_years :  [42 36 33 32 53 27 43 50 35 41 40 65 54 56 26 48 24 21 57 67 28 63 62 47\n",
      " 34 68 25 31 30 20 49 37 45 61 64 44 52 46 23 38 39 51  0 59 29 60 55 58\n",
      " 71 22 73 66 69 19 72 70 74 75]\n",
      "\n",
      "education :  ['высшее' 'среднее' 'Среднее' 'СРЕДНЕЕ' 'ВЫСШЕЕ' 'неоконченное высшее'\n",
      " 'начальное' 'Высшее' 'НЕОКОНЧЕННОЕ ВЫСШЕЕ' 'Неоконченное высшее'\n",
      " 'НАЧАЛЬНОЕ' 'Начальное' 'Ученая степень' 'УЧЕНАЯ СТЕПЕНЬ'\n",
      " 'ученая степень']\n",
      "\n",
      "education_id :  [0 1 2 3 4]\n",
      "\n",
      "family_status :  ['женат / замужем' 'гражданский брак' 'вдовец / вдова' 'в разводе'\n",
      " 'не женат / не замужем']\n",
      "\n",
      "family_status_id :  [0 1 2 3 4]\n",
      "\n",
      "gender :  ['F' 'M' 'unknow']\n",
      "\n",
      "debt :  [0 1]\n",
      "\n",
      "purpose :  ['покупка жилья' 'приобретение автомобиля' 'дополнительное образование'\n",
      " 'сыграть свадьбу' 'операции с жильем' 'образование'\n",
      " 'на проведение свадьбы' 'покупка жилья для семьи' 'покупка недвижимости'\n",
      " 'покупка коммерческой недвижимости' 'покупка жилой недвижимости'\n",
      " 'строительство собственной недвижимости' 'недвижимость'\n",
      " 'строительство недвижимости' 'на покупку подержанного автомобиля'\n",
      " 'на покупку своего автомобиля' 'операции с коммерческой недвижимостью'\n",
      " 'строительство жилой недвижимости' 'жилье'\n",
      " 'операции со своей недвижимостью' 'автомобили' 'заняться образованием'\n",
      " 'сделка с подержанным автомобилем' 'получение образования' 'автомобиль'\n",
      " 'свадьба' 'получение дополнительного образования' 'покупка своего жилья'\n",
      " 'операции с недвижимостью' 'получение высшего образования'\n",
      " 'свой автомобиль' 'сделка с автомобилем' 'профильное образование'\n",
      " 'высшее образование' 'покупка жилья для сдачи' 'на покупку автомобиля'\n",
      " 'ремонт жилью' 'заняться высшим образованием']\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for col in unique_colomns: #снова применим цикл, который выведет уникальные значения по всем столбцам\n",
    "    print(col, ': ', data[col].unique())\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "В столбцах  days_employed и total_income были найдены пропуски. Столбец days_employed был удален из-за большого количества пропусков и некорректных значений, отсутствие данных о стаже не повлияет на результат исследования.\n",
    "\n",
    "Пропуски в столбце total_income имеют случайный характер, поэтому мы заменили их на медианные значения по группам людей с одинаковым типом занятости, одного пола и уровня образования.  \n",
    "\n",
    "В столбцах children и gender привели данные к корректным значениям.  \n",
    "\n",
    "В столбце dob_years оставили значения равные 0, их не много и они не помешают исследованию.  \n",
    "\n",
    "Строки в столбце family_status были приведены к единому стилю написания. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Замена типа данных"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим, каким типам соответствуют данные в столбцах."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children              int64\n",
       "dob_years             int64\n",
       "education            object\n",
       "education_id          int64\n",
       "family_status        object\n",
       "family_status_id      int64\n",
       "gender               object\n",
       "income_type          object\n",
       "debt                  int64\n",
       "total_income        float64\n",
       "purpose              object\n",
       "dtype: object"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes #выведем информацию по типам данных по каждому столбцу"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Столбец total_income имеет тип данных float64, изменим тип данных на Int64 и округлим значения для удобства работы с данными. Так как пропусков в столбце нет, используем метод astype()."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['total_income'] = data['total_income'].round().astype('Int64')\n",
    "#в столбце total_income убираем дробную часть и меняем тип данных на int64."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Убедимся, что замена произошла."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>42</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253876</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>Среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145886</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>32</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267629</td>\n",
       "      <td>дополнительное образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  dob_years education  education_id     family_status  \\\n",
       "0         1         42    высшее             0   женат / замужем   \n",
       "1         1         36   среднее             1   женат / замужем   \n",
       "2         0         33   Среднее             1   женат / замужем   \n",
       "3         3         32   среднее             1   женат / замужем   \n",
       "4         0         53   среднее             1  гражданский брак   \n",
       "\n",
       "   family_status_id gender income_type  debt  total_income  \\\n",
       "0                 0      F   сотрудник     0        253876   \n",
       "1                 0      F   сотрудник     0        112080   \n",
       "2                 0      M   сотрудник     0        145886   \n",
       "3                 0      M   сотрудник     0        267629   \n",
       "4                 1      F   пенсионер     0        158616   \n",
       "\n",
       "                      purpose  \n",
       "0               покупка жилья  \n",
       "1     приобретение автомобиля  \n",
       "2               покупка жилья  \n",
       "3  дополнительное образование  \n",
       "4             сыграть свадьбу  "
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()  #выведем первые 5 строк таблицы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children             int64\n",
       "dob_years            int64\n",
       "education           object\n",
       "education_id         int64\n",
       "family_status       object\n",
       "family_status_id     int64\n",
       "gender              object\n",
       "income_type         object\n",
       "debt                 int64\n",
       "total_income         Int64\n",
       "purpose             object\n",
       "dtype: object"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes #выведем информацию по типам данных по каждому столбцу"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Привели значения в столбце total_income к типу  Int64 и убрали дробную часть."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обработка дубликатов"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Найдем неявные дубликаты"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Найдем и исправим неявные дубликаты для столбца education."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['высшее', 'среднее', 'Среднее', 'СРЕДНЕЕ', 'ВЫСШЕЕ',\n",
       "       'неоконченное высшее', 'начальное', 'Высшее',\n",
       "       'НЕОКОНЧЕННОЕ ВЫСШЕЕ', 'Неоконченное высшее', 'НАЧАЛЬНОЕ',\n",
       "       'Начальное', 'Ученая степень', 'УЧЕНАЯ СТЕПЕНЬ', 'ученая степень'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['education'].unique() #выведем уникальные значения в столбце education"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Приведем все строки в столбце education к нижнему регистру и проверим выполнение."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "data['education'] = data['education'].str.lower() #приводим строки к нижнему регистру"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['высшее', 'среднее', 'неоконченное высшее', 'начальное',\n",
       "       'ученая степень'], dtype=object)"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['education'].unique() #выводим все уникальные значения"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Найдем явные дубликаты"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Найдем и удалим явные дубликаты."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "54"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum() #находим кол-во явных дубликатов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.drop_duplicates().reset_index(drop=True)\n",
    "#удаляем дубликаты, одновременно создаем новые индексы и удаляем старые"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum() #проверяем кол-во дубликатов после удаления"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Неявные дубликаты в данных - написание одинаковых слов в разном регистре в столбце education - были исправлены. Удалены 54 строки явных дубликатов. На появление неявных дубликатов влияет человеческий фактор. Полные дубликаты могут быть причиной технической ошибки базы данных."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Лемматизация"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Можно заметить, что цели получения кредита схожи, но написаны по разному.  \n",
    "Просмотрим уникальные значения в столбце purpose, чтобы узнать цели для получения кредита. Для удобства отсортируем по алфавиту."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['автомобили',\n",
       " 'автомобиль',\n",
       " 'высшее образование',\n",
       " 'дополнительное образование',\n",
       " 'жилье',\n",
       " 'заняться высшим образованием',\n",
       " 'заняться образованием',\n",
       " 'на покупку автомобиля',\n",
       " 'на покупку подержанного автомобиля',\n",
       " 'на покупку своего автомобиля',\n",
       " 'на проведение свадьбы',\n",
       " 'недвижимость',\n",
       " 'образование',\n",
       " 'операции с жильем',\n",
       " 'операции с коммерческой недвижимостью',\n",
       " 'операции с недвижимостью',\n",
       " 'операции со своей недвижимостью',\n",
       " 'покупка жилой недвижимости',\n",
       " 'покупка жилья',\n",
       " 'покупка жилья для сдачи',\n",
       " 'покупка жилья для семьи',\n",
       " 'покупка коммерческой недвижимости',\n",
       " 'покупка недвижимости',\n",
       " 'покупка своего жилья',\n",
       " 'получение высшего образования',\n",
       " 'получение дополнительного образования',\n",
       " 'получение образования',\n",
       " 'приобретение автомобиля',\n",
       " 'профильное образование',\n",
       " 'ремонт жилью',\n",
       " 'свадьба',\n",
       " 'свой автомобиль',\n",
       " 'сделка с автомобилем',\n",
       " 'сделка с подержанным автомобилем',\n",
       " 'строительство жилой недвижимости',\n",
       " 'строительство недвижимости',\n",
       " 'строительство собственной недвижимости',\n",
       " 'сыграть свадьбу']"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted(data['purpose'].unique()) #выводим все уникальные значения, сортируя их по алфавиту"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Найдем леммы слов в строках, записанных в разных формах, и создадим новый столбец, в котором раскидаем похожие цели на 4 категории: недвижемость, автомобиль, образование и свадьба."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "def new_category_purpose(row):\n",
    "#создадим функцию, которая будет искать заданные леммы в строках и возвращать название нужной категории\n",
    "    lem_purpose = m.lemmatize(row['purpose'])\n",
    "    if 'автомобиль' in lem_purpose:\n",
    "        return 'автомобиль'\n",
    "    if 'образование' in lem_purpose:\n",
    "        return 'образование'\n",
    "    if 'жилье' in lem_purpose or 'недвижимость' in lem_purpose:\n",
    "        return 'недвижимость'\n",
    "    if 'свадьба' in lem_purpose:\n",
    "        return 'свадьба'\n",
    "\n",
    "data['purpose_category'] = data.apply(new_category_purpose, axis=1) #добавим новый столбец с категориями"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>purpose_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>42</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253876</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>недвижимость</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145886</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>недвижимость</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>32</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267629</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>свадьба</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  dob_years education  education_id     family_status  \\\n",
       "0         1         42    высшее             0   женат / замужем   \n",
       "1         1         36   среднее             1   женат / замужем   \n",
       "2         0         33   среднее             1   женат / замужем   \n",
       "3         3         32   среднее             1   женат / замужем   \n",
       "4         0         53   среднее             1  гражданский брак   \n",
       "\n",
       "   family_status_id gender income_type  debt  total_income  \\\n",
       "0                 0      F   сотрудник     0        253876   \n",
       "1                 0      F   сотрудник     0        112080   \n",
       "2                 0      M   сотрудник     0        145886   \n",
       "3                 0      M   сотрудник     0        267629   \n",
       "4                 1      F   пенсионер     0        158616   \n",
       "\n",
       "                      purpose purpose_category  \n",
       "0               покупка жилья     недвижимость  \n",
       "1     приобретение автомобиля       автомобиль  \n",
       "2               покупка жилья     недвижимость  \n",
       "3  дополнительное образование      образование  \n",
       "4             сыграть свадьбу          свадьба  "
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head() #выведем первые 5 строк таблицы, чтобы проверить выполнение предыдущего действия"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Добавили новый столбец с категориями недвижимость, автомобиль, образование и свадьба, созданный на основе схожих целей получения кредита."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Категоризация данных"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Для удобства работы с данными поделим значения в столбцах total_income и children на группы. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Деление на группы столбца total_income"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Столбец total_income разделим на 5 групп в зависимости от величины дохода, для удобства работы с данными присвоим каждой группе название: \"низкий\", \"ниже среднего\", \"средний\", \"выше среднего\", \"высокий\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>purpose_category</th>\n",
       "      <th>total_income_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>42</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253876</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>недвижимость</td>\n",
       "      <td>высокий</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>автомобиль</td>\n",
       "      <td>ниже среднего</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145886</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>недвижимость</td>\n",
       "      <td>средний</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>32</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267629</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>образование</td>\n",
       "      <td>высокий</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>свадьба</td>\n",
       "      <td>средний</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  dob_years education  education_id     family_status  \\\n",
       "0         1         42    высшее             0   женат / замужем   \n",
       "1         1         36   среднее             1   женат / замужем   \n",
       "2         0         33   среднее             1   женат / замужем   \n",
       "3         3         32   среднее             1   женат / замужем   \n",
       "4         0         53   среднее             1  гражданский брак   \n",
       "\n",
       "   family_status_id gender income_type  debt  total_income  \\\n",
       "0                 0      F   сотрудник     0        253876   \n",
       "1                 0      F   сотрудник     0        112080   \n",
       "2                 0      M   сотрудник     0        145886   \n",
       "3                 0      M   сотрудник     0        267629   \n",
       "4                 1      F   пенсионер     0        158616   \n",
       "\n",
       "                      purpose purpose_category total_income_group  \n",
       "0               покупка жилья     недвижимость            высокий  \n",
       "1     приобретение автомобиля       автомобиль      ниже среднего  \n",
       "2               покупка жилья     недвижимость            средний  \n",
       "3  дополнительное образование      образование            высокий  \n",
       "4             сыграть свадьбу          свадьба            средний  "
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin_labels_5 = [\"низкий\", \"ниже среднего\", \"средний\", \"выше среднего\", \"высокий\"] #создадим список с названиями интервалов\n",
    "\n",
    "data['total_income_group'] = pd.qcut(data['total_income'], q=[0, .2, .4, .6, .8, 1], labels=bin_labels_5)\n",
    "#создадим новый столбец total_income_group: разделим все значения столбца total_income на 5 интервалов\n",
    "#определим диапазон используемых квантилей и присвоим группам названия\n",
    "\n",
    "data.head() #выведем первые 5 строк таблицы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0              высокий\n",
       "1        ниже среднего\n",
       "2              средний\n",
       "3              высокий\n",
       "4              средний\n",
       "             ...      \n",
       "21466          высокий\n",
       "21467          средний\n",
       "21468           низкий\n",
       "21469          высокий\n",
       "21470           низкий\n",
       "Name: total_income, Length: 21471, dtype: category\n",
       "Categories (5, object): [низкий < ниже среднего < средний < выше среднего < высокий]"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# КОД РЕВЬЮЕРА\n",
    "\n",
    "pd.qcut(data['total_income'], 5, ['низкий','ниже среднего','средний','выше среднего', 'высокий'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Деление на группы столбца children"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В зависимости от количества детей столбец children разделим на 3 группы: \"бездетные\", \"1 или 2 ребенка\", \"многодетные\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "def category_children(children): \n",
    "#создадим функцию, которая будет сравнивать кол-во детей в каждой строке, и присваивать нужное название группы\n",
    "    if children == 0:\n",
    "        return 'бездетные'\n",
    "    if children == 1 or children == 2:\n",
    "        return '1 или 2 ребенка'\n",
    "    if children > 2:\n",
    "        return 'многодетные'  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>children_group</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>purpose_category</th>\n",
       "      <th>total_income_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1 или 2 ребенка</td>\n",
       "      <td>42</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253876</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>недвижимость</td>\n",
       "      <td>высокий</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1 или 2 ребенка</td>\n",
       "      <td>36</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>автомобиль</td>\n",
       "      <td>ниже среднего</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>бездетные</td>\n",
       "      <td>33</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145886</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>недвижимость</td>\n",
       "      <td>средний</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>многодетные</td>\n",
       "      <td>32</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267629</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>образование</td>\n",
       "      <td>высокий</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>бездетные</td>\n",
       "      <td>53</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>свадьба</td>\n",
       "      <td>средний</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children   children_group  dob_years education  education_id  \\\n",
       "0         1  1 или 2 ребенка         42    высшее             0   \n",
       "1         1  1 или 2 ребенка         36   среднее             1   \n",
       "2         0        бездетные         33   среднее             1   \n",
       "3         3      многодетные         32   среднее             1   \n",
       "4         0        бездетные         53   среднее             1   \n",
       "\n",
       "      family_status  family_status_id gender income_type  debt  total_income  \\\n",
       "0   женат / замужем                 0      F   сотрудник     0        253876   \n",
       "1   женат / замужем                 0      F   сотрудник     0        112080   \n",
       "2   женат / замужем                 0      M   сотрудник     0        145886   \n",
       "3   женат / замужем                 0      M   сотрудник     0        267629   \n",
       "4  гражданский брак                 1      F   пенсионер     0        158616   \n",
       "\n",
       "                      purpose purpose_category total_income_group  \n",
       "0               покупка жилья     недвижимость            высокий  \n",
       "1     приобретение автомобиля       автомобиль      ниже среднего  \n",
       "2               покупка жилья     недвижимость            средний  \n",
       "3  дополнительное образование      образование            высокий  \n",
       "4             сыграть свадьбу          свадьба            средний  "
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.insert(1, 'children_group', data['children'].apply(category_children))\n",
    "#добавим новый столбец total_income_group с названиями групп рядом со столбцом children \n",
    "\n",
    "data.head() #выводим первые 5 строк таблицы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Разделили данные в столбцах total_income и children на группы в зависимости от величины ежемесячного дохода и кол-ва детей соответственно."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Проверка гипотезы <a id='4'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- **Есть ли зависимость между наличием детей и возвратом кредита в срок?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Чтобы определить, есть ли зависимоть между наличием детей и возвратом кредита в срок, создадим сводную таблицу, которую сгруппируем по количеству детей, и найдем наличие/отсутствие задолжностей по кредиту в каждой группе. В таблице зададим последовательность названий групп в нужном нам порядке: сначала \"бездетные\", потом \"1 или 2 ребенка\" и \"многодетные\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children_group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>бездетные</td>\n",
       "      <td>13044</td>\n",
       "      <td>1063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1 или 2 ребенка</td>\n",
       "      <td>6337</td>\n",
       "      <td>647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>многодетные</td>\n",
       "      <td>349</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                 0     1\n",
       "children_group              \n",
       "бездетные        13044  1063\n",
       "1 или 2 ребенка   6337   647\n",
       "многодетные        349    31"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['children_group'] = pd.Categorical(data['children_group'], ordered=True, categories=['бездетные','1 или 2 ребенка','многодетные'])\n",
    "#зададим порядок вывода названий групп по кол-ву детей\n",
    "\n",
    "children_debt_pivot = data.pivot_table(index=['children_group'], columns='debt', values='total_income', aggfunc='count')\n",
    "#выведем сводную таблицу по кол-ву детей и кол-ву возврата/невозврата кредита и сохраняем ее в переменную children_debt_pivot\n",
    "\n",
    "children_debt_pivot #выведем получившуюся таблицу"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим новый столбец percent, в который запишем процент возврата кредита в каждой группе. Для этого разделим кол-во возвратов в срок на общее кол-во кредитов для каждой группы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children_group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>бездетные</td>\n",
       "      <td>13044</td>\n",
       "      <td>1063</td>\n",
       "      <td>92.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1 или 2 ребенка</td>\n",
       "      <td>6337</td>\n",
       "      <td>647</td>\n",
       "      <td>90.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>многодетные</td>\n",
       "      <td>349</td>\n",
       "      <td>31</td>\n",
       "      <td>91.84</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                 0     1  percent\n",
       "children_group                       \n",
       "бездетные        13044  1063    92.46\n",
       "1 или 2 ребенка   6337   647    90.74\n",
       "многодетные        349    31    91.84"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "children_debt_pivot['percent'] = children_debt_pivot[0] / (children_debt_pivot[1] + children_debt_pivot[0]) * 100\n",
    "#создадим новый столбец percent, в который запишем процент возврата кредитов в каждой группе\n",
    "\n",
    "children_debt_pivot.round(2) #округлим значения до двух знаков после запятой"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**   \n",
    "Из таблицы можно сделать вывод, что самый высокий процент возврата в бездетной группе. Самый низкий у группы с 1 или 2 детьми. Сильного разброса между группами не наблюдается."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- **Есть ли зависимость между семейным положением и возвратом кредита в срок?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим сводную таблицу, которую сгруппируем по семейному положению, и найдем наличие/отсутствие задолженностей по кредиту в каждой группе. Также в таблице зададим последовательность названий групп в нужном нам порядке."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>family_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>не женат / не замужем</td>\n",
       "      <td>2536</td>\n",
       "      <td>274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>3775</td>\n",
       "      <td>388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>11413</td>\n",
       "      <td>931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>в разводе</td>\n",
       "      <td>1110</td>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>вдовец / вдова</td>\n",
       "      <td>896</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                       0    1\n",
       "family_status                    \n",
       "не женат / не замужем   2536  274\n",
       "гражданский брак        3775  388\n",
       "женат / замужем        11413  931\n",
       "в разводе               1110   85\n",
       "вдовец / вдова           896   63"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['family_status'] = pd.Categorical(data['family_status'], ordered=True, categories=['не женат / не замужем','гражданский брак','женат / замужем', 'в разводе', 'вдовец / вдова'])\n",
    "#зададим порядок вывода названий групп по семейному статусу\n",
    "\n",
    "family_status_debt_pivot = data.pivot_table(index=['family_status'], columns='debt', values='total_income', aggfunc='count')\n",
    "#выведем сводную таблицу по семейному положению и кол-ву возврата/невозврата кредита и сохраняем ее в переменную family_status_debt_pivot\n",
    "\n",
    "family_status_debt_pivot #выведем получившуюся таблицу"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим новый столбец percent, в который запишем процент возврата кредита в каждой группе. Для этого разделим кол-во возвратов в срок на общее кол-во кредитов для каждой группы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>family_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>не женат / не замужем</td>\n",
       "      <td>2536</td>\n",
       "      <td>274</td>\n",
       "      <td>90.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>3775</td>\n",
       "      <td>388</td>\n",
       "      <td>90.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>11413</td>\n",
       "      <td>931</td>\n",
       "      <td>92.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>в разводе</td>\n",
       "      <td>1110</td>\n",
       "      <td>85</td>\n",
       "      <td>92.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>вдовец / вдова</td>\n",
       "      <td>896</td>\n",
       "      <td>63</td>\n",
       "      <td>93.43</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                       0    1  percent\n",
       "family_status                             \n",
       "не женат / не замужем   2536  274    90.25\n",
       "гражданский брак        3775  388    90.68\n",
       "женат / замужем        11413  931    92.46\n",
       "в разводе               1110   85    92.89\n",
       "вдовец / вдова           896   63    93.43"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "family_status_debt_pivot['percent'] = family_status_debt_pivot[0] / (family_status_debt_pivot[1] + family_status_debt_pivot[0]) * 100\n",
    "#создадим новый столбец percent, в который запишем процент возврата кредитов в каждой группе\n",
    "\n",
    "family_status_debt_pivot.round(2) #округлим значения до двух знаков после запятой"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Самый высокий процент возврата у вдовцов/вдов, самый низкий процент возврата у незамужних/неженатых и в гражданском браке."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- **Есть ли зависимость между уровнем дохода и возвратом кредита в срок?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим сводную таблицу, которую сгруппируем по уровню дохода и найдем наличие/отсутствие задолжностей по кредиту в каждой группе. Зададим последовательность названий групп в нужном нам порядке."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_income_group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>низкий</td>\n",
       "      <td>3951</td>\n",
       "      <td>344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>ниже среднего</td>\n",
       "      <td>3938</td>\n",
       "      <td>356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>средний</td>\n",
       "      <td>3917</td>\n",
       "      <td>377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>выше среднего</td>\n",
       "      <td>3930</td>\n",
       "      <td>364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>высокий</td>\n",
       "      <td>3994</td>\n",
       "      <td>300</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                   0    1\n",
       "total_income_group           \n",
       "низкий              3951  344\n",
       "ниже среднего       3938  356\n",
       "средний             3917  377\n",
       "выше среднего       3930  364\n",
       "высокий             3994  300"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['total_income_group'] = pd.Categorical(data['total_income_group'], ordered=True, categories=['низкий','ниже среднего','средний', 'выше среднего', 'высокий'])\n",
    "#зададим порядок вывода названий групп по уровню дохода\n",
    "\n",
    "total_income_debt_pivot = data.pivot_table(index=['total_income_group'], columns='debt', values='total_income', aggfunc='count')\n",
    "#выведем сводную таблицу по уровню дохода и кол-ву возврата/невозврата кредита и сохраняем ее в переменную total_income_debt_pivot\n",
    "\n",
    "total_income_debt_pivot #выведем получившуюся таблицу"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим новый столбец percent, в который запишем процент возврата кредита в каждой группе. Для этого разделим кол-во возвратов в срок на общее кол-во кредитов для каждой группы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_income_group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>низкий</td>\n",
       "      <td>3951</td>\n",
       "      <td>344</td>\n",
       "      <td>91.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>ниже среднего</td>\n",
       "      <td>3938</td>\n",
       "      <td>356</td>\n",
       "      <td>91.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>средний</td>\n",
       "      <td>3917</td>\n",
       "      <td>377</td>\n",
       "      <td>91.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>выше среднего</td>\n",
       "      <td>3930</td>\n",
       "      <td>364</td>\n",
       "      <td>91.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>высокий</td>\n",
       "      <td>3994</td>\n",
       "      <td>300</td>\n",
       "      <td>93.01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                   0    1  percent\n",
       "total_income_group                    \n",
       "низкий              3951  344    91.99\n",
       "ниже среднего       3938  356    91.71\n",
       "средний             3917  377    91.22\n",
       "выше среднего       3930  364    91.52\n",
       "высокий             3994  300    93.01"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_income_debt_pivot['percent'] = total_income_debt_pivot[0] / (total_income_debt_pivot[1] + total_income_debt_pivot[0]) * 100\n",
    "#создадим новый столбец percent, в который запишем процент возврата кредитов в каждой группе\n",
    "\n",
    "total_income_debt_pivot.round(2) #округлим значения до двух знаков после запятой"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Самый низкий процент возврата по кредиту у людей со средним доходом, самый высокий у людей с высоким уровнем дохода."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- **Как разные цели кредита влияют на его возврат в срок?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим сводную таблицу, которую сгруппируем по целям кредита и найдем наличие/отсутствие задолжностей по кредиту в каждой группе."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose_category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>автомобиль</td>\n",
       "      <td>3905</td>\n",
       "      <td>403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>недвижимость</td>\n",
       "      <td>10032</td>\n",
       "      <td>782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>образование</td>\n",
       "      <td>3644</td>\n",
       "      <td>370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>свадьба</td>\n",
       "      <td>2149</td>\n",
       "      <td>186</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                  0    1\n",
       "purpose_category            \n",
       "автомобиль         3905  403\n",
       "недвижимость      10032  782\n",
       "образование        3644  370\n",
       "свадьба            2149  186"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "purpose_category_debt_pivot = data.pivot_table(index=['purpose_category'], columns='debt', values='total_income', aggfunc='count')\n",
    "#выведем сводную таблицу по уровню дохода и кол-ву возврата/невозврата кредита и сохраняем ее в переменную purpose_category_debt_pivot\n",
    "\n",
    "purpose_category_debt_pivot #выведем получившуюся таблицу"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим новый столбец percent, в который запишем процент возврата кредита в каждой группе. Для этого разделим кол-во возвратов в срок на общее кол-во кредитов для каждой группы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose_category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>автомобиль</td>\n",
       "      <td>3905</td>\n",
       "      <td>403</td>\n",
       "      <td>90.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>недвижимость</td>\n",
       "      <td>10032</td>\n",
       "      <td>782</td>\n",
       "      <td>92.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>образование</td>\n",
       "      <td>3644</td>\n",
       "      <td>370</td>\n",
       "      <td>90.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>свадьба</td>\n",
       "      <td>2149</td>\n",
       "      <td>186</td>\n",
       "      <td>92.03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                  0    1  percent\n",
       "purpose_category                     \n",
       "автомобиль         3905  403    90.65\n",
       "недвижимость      10032  782    92.77\n",
       "образование        3644  370    90.78\n",
       "свадьба            2149  186    92.03"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "purpose_category_debt_pivot['percent'] = purpose_category_debt_pivot[0] / (purpose_category_debt_pivot[1] + purpose_category_debt_pivot[0]) * 100\n",
    "#создадим новый столбец, в который запишем процент возврата кредитов в каждой группе\n",
    "\n",
    "purpose_category_debt_pivot.round(2) #округлим значения до двух знаков после запятой"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**  \n",
    "Видим, что самые высокие показатели возврата по кредиту на недвижимость и свадьбу. Самый низкий процент возврата по кредиту на автомобиль."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Итоги исследования <a id='5'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Прежде чем проверить гипотезу мы ознакомились с входными данными, провели их предобработку: заменили пропуски на подходящие значения, изменили тип данных, исправили некорректные значения, удалили явные и неявные дубликаты.  \n",
    "\n",
    "В ходе исследования, отвечая на вопросы о зависимости возврата кредита в срок от наличия детей, семейного положения, уровня дохода и целей кредита, установили, что:  \n",
    "\n",
    "- самые высокие показатели возврата кредита у вдовцов/вдов и людей в гражданском браке, а самые низкие показатели у незамужних/неженатых, разница между этими группами составляет 3%, что является значительным показателем для банка. Следовательно можно утверждать, что семейное положение напрямую влияет на погашение кредита в срок;\n",
    "- показатели по кол-ву детей не так сильно разнятся, но есть увеличение процента возврата кредита в сторону бездетных, поэтому мы можем утверждать, что кол-во детей лишь частично влияет на погашение кредита;\n",
    "- на возврат кредита также влияют его цели: категории \"недвижемость\" и \"свадьба\" имеют на 1,5-2% выше уровень возврата по кредиту в сравнении с другими категориями;\n",
    "- по уровню дохода возврат по кредиту колеблется в пределах одного процента, немного выше процент возврата у людей с высоким доходом, но критической зависимости не наблюдается.  \n",
    "\n",
    "Таким образом гипотеза подтверждена частично: семейное положение влияет на погашение кредита в срок, а кол-во детей не имеет критического значения.  \n",
    "Также в ходе исследования, были обнаружены, что цели кредита в значительной степени влияют на возврат кредита в срок.\n"
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 1254,
    "start_time": "2021-12-23T06:28:28.634Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-23T06:34:34.369Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T07:23:00.883Z"
   },
   {
    "duration": 125,
    "start_time": "2021-12-23T07:25:09.337Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T07:25:17.600Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T07:31:29.070Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T07:31:58.468Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-23T07:33:01.819Z"
   },
   {
    "duration": 73,
    "start_time": "2021-12-23T07:33:14.611Z"
   },
   {
    "duration": 552,
    "start_time": "2021-12-23T07:33:14.687Z"
   },
   {
    "duration": 638,
    "start_time": "2021-12-23T07:33:15.242Z"
   },
   {
    "duration": 415,
    "start_time": "2021-12-23T07:33:15.883Z"
   },
   {
    "duration": 218,
    "start_time": "2021-12-23T07:33:16.301Z"
   },
   {
    "duration": 210,
    "start_time": "2021-12-23T07:33:16.521Z"
   },
   {
    "duration": 324,
    "start_time": "2021-12-23T07:33:16.734Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T07:41:26.941Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T07:58:43.972Z"
   },
   {
    "duration": 435,
    "start_time": "2021-12-23T10:50:12.113Z"
   },
   {
    "duration": 342,
    "start_time": "2021-12-23T10:56:09.902Z"
   },
   {
    "duration": 372,
    "start_time": "2021-12-23T11:05:21.245Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-23T11:10:35.415Z"
   },
   {
    "duration": 83,
    "start_time": "2021-12-23T11:27:31.074Z"
   },
   {
    "duration": 265,
    "start_time": "2021-12-23T11:27:31.161Z"
   },
   {
    "duration": 276,
    "start_time": "2021-12-23T11:27:31.429Z"
   },
   {
    "duration": 361,
    "start_time": "2021-12-23T11:27:31.707Z"
   },
   {
    "duration": 342,
    "start_time": "2021-12-23T11:27:32.070Z"
   },
   {
    "duration": 424,
    "start_time": "2021-12-23T11:27:32.414Z"
   },
   {
    "duration": 365,
    "start_time": "2021-12-23T11:27:32.842Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T11:28:36.487Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-23T11:29:45.822Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-23T11:41:27.137Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-23T11:44:13.241Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-23T11:44:17.471Z"
   },
   {
    "duration": 2540,
    "start_time": "2021-12-23T11:45:14.110Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T12:18:13.065Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-23T12:25:12.752Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-23T12:26:04.913Z"
   },
   {
    "duration": 78,
    "start_time": "2021-12-23T12:32:40.113Z"
   },
   {
    "duration": 120,
    "start_time": "2021-12-23T12:32:40.193Z"
   },
   {
    "duration": 150,
    "start_time": "2021-12-23T12:32:40.316Z"
   },
   {
    "duration": 173,
    "start_time": "2021-12-23T12:32:40.469Z"
   },
   {
    "duration": 167,
    "start_time": "2021-12-23T12:32:40.644Z"
   },
   {
    "duration": 150,
    "start_time": "2021-12-23T12:32:40.814Z"
   },
   {
    "duration": 171,
    "start_time": "2021-12-23T12:32:40.966Z"
   },
   {
    "duration": 187,
    "start_time": "2021-12-23T12:32:41.141Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-23T12:33:11.891Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T12:35:04.011Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-23T12:35:37.603Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-23T12:36:58.464Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T12:37:52.360Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T12:41:50.598Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T12:41:55.170Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T12:47:26.291Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T12:48:19.835Z"
   },
   {
    "duration": 323,
    "start_time": "2021-12-23T12:50:28.137Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-23T12:50:35.859Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-23T12:51:16.854Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-23T12:53:34.691Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-23T13:02:41.712Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-23T13:04:57.587Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T13:05:09.131Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T13:52:06.250Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-23T13:56:14.419Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T13:56:46.695Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-23T13:57:44.231Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-23T13:57:47.311Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-23T13:57:49.624Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T14:05:48.854Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-23T14:06:17.665Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T14:12:38.160Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T14:13:24.377Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-23T14:13:59.198Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-23T14:14:41.516Z"
   },
   {
    "duration": 359,
    "start_time": "2021-12-23T14:28:42.975Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-23T14:29:32.872Z"
   },
   {
    "duration": 74,
    "start_time": "2021-12-23T14:30:05.163Z"
   },
   {
    "duration": 104,
    "start_time": "2021-12-23T14:30:05.240Z"
   },
   {
    "duration": 188,
    "start_time": "2021-12-23T14:30:05.347Z"
   },
   {
    "duration": 200,
    "start_time": "2021-12-23T14:30:05.537Z"
   },
   {
    "duration": 164,
    "start_time": "2021-12-23T14:30:05.740Z"
   },
   {
    "duration": 186,
    "start_time": "2021-12-23T14:30:05.906Z"
   },
   {
    "duration": 206,
    "start_time": "2021-12-23T14:30:06.095Z"
   },
   {
    "duration": 201,
    "start_time": "2021-12-23T14:30:06.306Z"
   },
   {
    "duration": 121,
    "start_time": "2021-12-23T14:30:06.511Z"
   },
   {
    "duration": 159,
    "start_time": "2021-12-23T14:30:06.634Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-23T14:31:37.369Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T14:43:48.239Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-23T14:45:13.243Z"
   },
   {
    "duration": 72,
    "start_time": "2021-12-23T14:45:26.182Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-23T14:45:26.257Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-23T14:45:26.275Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-23T14:45:26.292Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-23T14:45:26.328Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-23T14:45:26.342Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-23T14:45:26.354Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-23T14:45:26.372Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-23T14:45:26.378Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-23T14:45:26.424Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-23T14:45:26.430Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-23T14:45:26.458Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-23T14:45:26.466Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-23T14:45:26.476Z"
   },
   {
    "duration": 68,
    "start_time": "2021-12-23T14:50:51.324Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-23T14:50:51.395Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-23T14:50:51.430Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-23T14:50:51.463Z"
   },
   {
    "duration": 39,
    "start_time": "2021-12-23T14:50:51.485Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-23T14:50:51.526Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-23T14:50:51.556Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-23T14:50:51.579Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-23T14:50:51.600Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-23T14:50:51.618Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-23T14:50:51.645Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-23T14:50:51.685Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-23T14:50:51.693Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-23T14:50:51.724Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-23T14:52:31.059Z"
   },
   {
    "duration": 472,
    "start_time": "2021-12-24T06:25:16.632Z"
   },
   {
    "duration": 876,
    "start_time": "2021-12-24T06:25:54.561Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-24T06:25:55.440Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T06:25:55.476Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T06:25:55.497Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-24T06:25:55.516Z"
   },
   {
    "duration": 434,
    "start_time": "2021-12-24T06:26:57.945Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T06:27:56.776Z"
   },
   {
    "duration": 362,
    "start_time": "2021-12-24T06:28:11.643Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T06:29:46.567Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T06:31:40.867Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T06:32:05.249Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T06:34:31.513Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-24T06:34:38.615Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-24T06:38:16.184Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-24T06:40:15.744Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T06:40:25.281Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T06:40:27.793Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-24T06:40:42.979Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-24T06:40:47.362Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T06:53:22.069Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-24T06:56:50.945Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T06:56:53.609Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-24T07:01:49.013Z"
   },
   {
    "duration": 77,
    "start_time": "2021-12-24T07:02:06.028Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T07:02:06.108Z"
   },
   {
    "duration": 40,
    "start_time": "2021-12-24T07:02:06.131Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-24T07:02:06.174Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T07:02:06.190Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T07:02:06.202Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-24T07:02:06.214Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T07:02:06.269Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-24T07:02:06.287Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-24T07:02:12.908Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-24T07:07:16.192Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T07:07:40.860Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T07:09:03.568Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-24T07:09:57.558Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-24T07:10:46.486Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T07:25:18.196Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-24T07:25:29.792Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-24T07:26:21.703Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T07:26:23.678Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-24T07:27:53.106Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-24T07:28:30.304Z"
   },
   {
    "duration": 358,
    "start_time": "2021-12-24T07:31:34.672Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T07:31:58.091Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T07:32:21.454Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-24T07:32:52.306Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-24T07:32:55.096Z"
   },
   {
    "duration": 304,
    "start_time": "2021-12-24T07:34:49.592Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T07:34:55.195Z"
   },
   {
    "duration": 76,
    "start_time": "2021-12-24T07:35:06.916Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T07:35:06.995Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-24T07:35:07.015Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T07:35:07.031Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T07:35:07.068Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T07:35:07.085Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T07:35:07.099Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-24T07:35:07.121Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-24T07:35:07.175Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T07:35:07.190Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T07:35:07.210Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-24T07:35:07.223Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-24T07:35:07.285Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-24T07:35:07.293Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T07:35:07.317Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-24T07:35:07.367Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T07:35:07.393Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T07:35:07.402Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-24T07:35:07.414Z"
   },
   {
    "duration": 68,
    "start_time": "2021-12-24T07:35:07.421Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T07:35:09.107Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-24T07:35:59.697Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-24T07:36:33.166Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T07:36:56.297Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T07:37:07.363Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T07:37:12.603Z"
   },
   {
    "duration": 1212,
    "start_time": "2021-12-24T07:41:54.544Z"
   },
   {
    "duration": 308,
    "start_time": "2021-12-24T07:42:07.770Z"
   },
   {
    "duration": 2305,
    "start_time": "2021-12-24T07:47:39.557Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-24T07:51:12.864Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-24T07:53:31.507Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-24T07:53:37.739Z"
   },
   {
    "duration": 310,
    "start_time": "2021-12-24T08:00:06.750Z"
   },
   {
    "duration": 371,
    "start_time": "2021-12-24T08:00:23.407Z"
   },
   {
    "duration": 302,
    "start_time": "2021-12-24T08:07:50.194Z"
   },
   {
    "duration": 301,
    "start_time": "2021-12-24T08:08:24.470Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T08:09:54.453Z"
   },
   {
    "duration": 1184,
    "start_time": "2021-12-24T08:11:55.467Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T08:12:37.055Z"
   },
   {
    "duration": 373,
    "start_time": "2021-12-24T08:17:32.494Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T08:18:02.665Z"
   },
   {
    "duration": 287,
    "start_time": "2021-12-24T08:28:41.092Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T10:02:13.476Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T10:02:17.412Z"
   },
   {
    "duration": 74,
    "start_time": "2021-12-24T10:04:07.631Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T10:04:07.707Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-24T10:04:07.729Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-24T10:04:07.770Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T10:04:07.786Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T10:04:07.798Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-24T10:04:07.811Z"
   },
   {
    "duration": 49,
    "start_time": "2021-12-24T10:04:07.831Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T10:04:07.883Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T10:04:07.901Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-24T10:04:07.922Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T10:04:07.978Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-24T10:04:07.999Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-24T10:04:08.015Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T10:04:08.068Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-24T10:04:08.086Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:04:08.113Z"
   },
   {
    "duration": 52,
    "start_time": "2021-12-24T10:04:08.123Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:04:08.177Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-24T10:04:08.186Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:04:08.221Z"
   },
   {
    "duration": 40,
    "start_time": "2021-12-24T10:04:08.230Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-24T10:04:08.274Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T10:04:08.297Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:04:25.260Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-24T10:04:28.725Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T10:04:33.093Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-24T10:05:17.708Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-24T10:05:32.061Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-24T10:05:57.392Z"
   },
   {
    "duration": 40,
    "start_time": "2021-12-24T10:05:58.385Z"
   },
   {
    "duration": 80,
    "start_time": "2021-12-24T10:08:31.697Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T10:08:31.781Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T10:08:31.804Z"
   },
   {
    "duration": 49,
    "start_time": "2021-12-24T10:08:31.822Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-24T10:08:31.874Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T10:08:31.889Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T10:08:31.900Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-24T10:08:31.922Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-24T10:08:31.983Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-24T10:08:32.008Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-24T10:08:32.036Z"
   },
   {
    "duration": 39,
    "start_time": "2021-12-24T10:08:32.076Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T10:08:32.117Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-24T10:08:32.134Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T10:08:32.159Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-24T10:08:32.181Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:08:32.208Z"
   },
   {
    "duration": 49,
    "start_time": "2021-12-24T10:08:32.217Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-24T10:08:32.269Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-24T10:08:32.277Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:08:32.303Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T10:08:32.312Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-24T10:08:32.322Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T10:08:32.381Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T10:08:32.397Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-24T10:08:32.409Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T10:08:32.467Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:08:35.518Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-24T10:09:38.973Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T10:09:55.975Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T10:11:55.838Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-24T10:12:40.236Z"
   },
   {
    "duration": 97,
    "start_time": "2021-12-24T10:16:35.981Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T10:16:36.082Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-24T10:16:36.105Z"
   },
   {
    "duration": 49,
    "start_time": "2021-12-24T10:16:36.125Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-24T10:16:36.177Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T10:16:36.192Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-24T10:16:36.203Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-24T10:16:36.268Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T10:16:36.288Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T10:16:36.305Z"
   },
   {
    "duration": 47,
    "start_time": "2021-12-24T10:16:36.323Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-24T10:16:36.372Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-24T10:16:36.395Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-24T10:16:36.403Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-24T10:16:36.425Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-24T10:16:36.477Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-24T10:16:36.503Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-24T10:16:36.512Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-24T10:16:36.525Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-24T10:16:36.569Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:16:36.595Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-24T10:16:36.604Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-24T10:16:36.615Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T10:16:36.672Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-24T10:16:36.683Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-24T10:16:36.697Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-24T10:16:36.719Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-24T10:16:36.735Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-24T10:16:36.775Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T10:16:36.798Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-24T10:16:36.809Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-24T10:16:36.871Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-24T10:16:36.906Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T10:21:12.015Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T10:42:11.026Z"
   },
   {
    "duration": 311,
    "start_time": "2021-12-24T10:43:38.990Z"
   },
   {
    "duration": 394,
    "start_time": "2021-12-24T10:44:26.707Z"
   },
   {
    "duration": 5937,
    "start_time": "2021-12-24T11:07:01.093Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-24T11:07:21.994Z"
   },
   {
    "duration": 100,
    "start_time": "2021-12-24T12:38:03.751Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-24T12:46:35.170Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-24T12:55:37.385Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-24T12:58:33.448Z"
   },
   {
    "duration": 357,
    "start_time": "2021-12-24T12:59:50.615Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-24T13:00:04.627Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-24T13:06:39.941Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-24T13:07:32.725Z"
   },
   {
    "duration": 304,
    "start_time": "2021-12-24T13:15:06.488Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-24T13:15:38.261Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-24T13:16:15.107Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-24T13:20:18.104Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-24T13:21:59.790Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-24T13:22:08.103Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-24T13:22:14.738Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-24T13:22:26.258Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-24T13:22:38.611Z"
   },
   {
    "duration": 96,
    "start_time": "2021-12-24T13:22:56.670Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-24T13:23:34.482Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-24T13:24:16.944Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-24T13:25:34.465Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-24T13:33:45.991Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-24T13:36:02.060Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-24T13:47:41.123Z"
   },
   {
    "duration": 610,
    "start_time": "2021-12-26T06:13:52.333Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T06:13:52.945Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:13:52.962Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:13:52.978Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:13:52.989Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:13:52.996Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T06:13:53.003Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T06:13:53.018Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:13:53.044Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:13:53.053Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:13:53.064Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:13:53.076Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T06:13:53.090Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:13:53.099Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:13:53.115Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T06:13:53.124Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T06:13:53.154Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T06:13:53.158Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:13:53.178Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T06:13:53.185Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T06:13:53.202Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:13:53.207Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T06:13:53.218Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T06:13:53.243Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:13:53.248Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T06:13:53.260Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:13:53.277Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:13:53.291Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:13:53.301Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:13:53.317Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T06:13:53.324Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T06:13:53.355Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T06:13:53.378Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:13:53.398Z"
   },
   {
    "duration": 3645,
    "start_time": "2021-12-26T06:13:53.404Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:13:57.051Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T06:13:57.064Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T06:18:34.830Z"
   },
   {
    "duration": 61,
    "start_time": "2021-12-26T06:18:57.886Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:18:57.949Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:18:57.961Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T06:18:57.974Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:18:57.983Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:18:57.991Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:18:57.997Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-26T06:18:58.010Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:18:58.046Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:18:58.056Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T06:18:58.070Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T06:18:58.078Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:18:58.095Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-26T06:18:58.104Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:18:58.143Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:18:58.155Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T06:18:58.171Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:18:58.176Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:18:58.189Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-26T06:18:58.196Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:18:58.243Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:18:58.249Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:18:58.257Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:18:58.271Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:18:58.280Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:18:58.291Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:18:58.306Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T06:18:58.319Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:18:58.347Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T06:18:58.361Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T06:18:58.374Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-26T06:18:58.402Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T06:18:58.455Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T06:18:58.479Z"
   },
   {
    "duration": 4183,
    "start_time": "2021-12-26T06:18:58.487Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:19:02.672Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T06:19:05.501Z"
   },
   {
    "duration": 304,
    "start_time": "2021-12-26T06:20:08.485Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T06:21:05.933Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T06:23:17.006Z"
   },
   {
    "duration": 298,
    "start_time": "2021-12-26T06:28:21.418Z"
   },
   {
    "duration": 193,
    "start_time": "2021-12-26T06:28:32.079Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T06:28:40.527Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:36:48.053Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:36:55.224Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:37:07.682Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-26T06:49:14.400Z"
   },
   {
    "duration": 928,
    "start_time": "2021-12-26T06:49:26.474Z"
   },
   {
    "duration": 2,
    "start_time": "2021-12-26T06:52:05.231Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:52:14.903Z"
   },
   {
    "duration": 204,
    "start_time": "2021-12-26T06:55:32.008Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:56:23.792Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-26T06:57:34.959Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:57:35.021Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T06:57:35.033Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:57:35.053Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:57:35.064Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:57:35.074Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T06:57:35.084Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-26T06:57:35.102Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T06:57:35.146Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:57:35.156Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:57:35.170Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T06:57:35.186Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T06:57:35.207Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T06:57:35.222Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:57:35.249Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T06:57:35.260Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:57:35.284Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:57:35.292Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T06:57:35.307Z"
   },
   {
    "duration": 40,
    "start_time": "2021-12-26T06:57:35.315Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:57:35.357Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T06:57:35.363Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:57:35.390Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:57:35.406Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:57:35.418Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T06:57:35.429Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T06:57:35.458Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T06:57:35.475Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T06:57:35.485Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:57:35.514Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-26T06:57:35.530Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-26T06:57:35.574Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-26T06:57:35.613Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:57:35.663Z"
   },
   {
    "duration": 4318,
    "start_time": "2021-12-26T06:57:35.671Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:57:39.991Z"
   },
   {
    "duration": 43,
    "start_time": "2021-12-26T06:57:40.004Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T06:57:40.049Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T06:57:40.081Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:57:42.904Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-26T06:57:59.995Z"
   },
   {
    "duration": 214,
    "start_time": "2021-12-26T06:58:14.493Z"
   },
   {
    "duration": 83,
    "start_time": "2021-12-26T06:58:40.416Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T06:58:40.501Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:58:40.542Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T06:58:40.558Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T06:58:40.570Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T06:58:40.584Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T06:58:40.613Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T06:58:40.636Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T06:58:40.661Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T06:58:40.675Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T06:58:40.705Z"
   },
   {
    "duration": 36,
    "start_time": "2021-12-26T06:58:40.733Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:58:40.771Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T06:58:40.786Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T06:58:40.815Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T06:58:40.833Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T06:58:40.860Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T06:58:40.877Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T06:58:40.899Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T06:58:40.917Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T06:58:40.943Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T06:58:40.951Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T06:58:40.983Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T06:58:41.005Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T06:58:41.024Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-26T06:58:41.048Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-26T06:58:41.084Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T06:58:41.124Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-26T06:58:41.154Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T06:58:41.188Z"
   },
   {
    "duration": 47,
    "start_time": "2021-12-26T06:58:41.217Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T06:58:41.266Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-26T06:58:41.296Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T06:58:41.332Z"
   },
   {
    "duration": 4757,
    "start_time": "2021-12-26T06:58:41.347Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T06:58:46.106Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-26T06:58:46.122Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T06:58:46.177Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-26T06:59:14.781Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T07:00:34.304Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T07:01:23.566Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:01:57.482Z"
   },
   {
    "duration": 64,
    "start_time": "2021-12-26T07:07:22.162Z"
   },
   {
    "duration": 200,
    "start_time": "2021-12-26T07:07:38.582Z"
   },
   {
    "duration": 288,
    "start_time": "2021-12-26T07:07:46.407Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-26T07:12:52.522Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T07:12:52.580Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T07:12:52.592Z"
   },
   {
    "duration": 36,
    "start_time": "2021-12-26T07:12:52.606Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T07:12:52.643Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T07:12:52.652Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T07:12:52.659Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T07:12:52.674Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:12:52.685Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T07:12:52.695Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-26T07:12:52.706Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T07:12:52.743Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T07:12:52.754Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T07:12:52.760Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T07:12:52.774Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T07:12:52.789Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T07:12:52.805Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-26T07:12:52.809Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T07:12:52.843Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T07:12:52.848Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T07:12:52.866Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:12:52.871Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T07:12:52.881Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T07:12:52.895Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T07:12:52.903Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T07:12:52.918Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:12:52.947Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T07:12:52.956Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T07:12:52.967Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T07:12:52.987Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T07:12:53.001Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T07:12:53.025Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T07:12:53.052Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T07:12:53.074Z"
   },
   {
    "duration": 3805,
    "start_time": "2021-12-26T07:12:53.080Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T07:12:56.886Z"
   },
   {
    "duration": 43,
    "start_time": "2021-12-26T07:12:56.901Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T07:12:56.946Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T07:13:04.656Z"
   },
   {
    "duration": 4998,
    "start_time": "2021-12-26T07:13:15.867Z"
   },
   {
    "duration": 5158,
    "start_time": "2021-12-26T07:13:21.580Z"
   },
   {
    "duration": 73,
    "start_time": "2021-12-26T07:16:08.882Z"
   },
   {
    "duration": 247,
    "start_time": "2021-12-26T07:16:15.285Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T07:37:46.095Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-26T07:39:43.232Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T07:39:43.293Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T07:39:43.304Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-26T07:39:43.321Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T07:39:43.347Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:39:43.355Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T07:39:43.364Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T07:39:43.375Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T07:39:43.387Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T07:39:43.396Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-26T07:39:43.410Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T07:39:43.446Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T07:39:43.458Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T07:39:43.462Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T07:39:43.483Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T07:39:43.497Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T07:39:43.513Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T07:39:43.518Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T07:39:43.547Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T07:39:43.552Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T07:39:43.571Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:39:43.576Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T07:39:43.585Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:39:43.600Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T07:39:43.609Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T07:39:43.621Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T07:39:43.652Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T07:39:43.662Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T07:39:43.670Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T07:39:43.687Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T07:39:43.701Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-26T07:39:43.726Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T07:39:43.763Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T07:39:43.784Z"
   },
   {
    "duration": 3932,
    "start_time": "2021-12-26T07:39:43.790Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T07:39:47.724Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T07:39:47.747Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T07:39:50.730Z"
   },
   {
    "duration": 219,
    "start_time": "2021-12-26T08:01:48.269Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T08:02:57.007Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T08:04:06.935Z"
   },
   {
    "duration": 226,
    "start_time": "2021-12-26T08:04:10.727Z"
   },
   {
    "duration": 523,
    "start_time": "2021-12-26T08:04:22.344Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-26T08:05:34.307Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T08:05:34.371Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T08:05:34.384Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T08:05:34.412Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T08:05:34.423Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:05:34.447Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T08:05:34.456Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T08:05:34.474Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T08:05:34.486Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T08:05:34.497Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-26T08:05:34.513Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T08:05:34.552Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:05:34.569Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T08:05:34.577Z"
   },
   {
    "duration": 73,
    "start_time": "2021-12-26T08:05:34.598Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T08:05:34.673Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T08:05:34.690Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:05:34.695Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:05:34.709Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-26T08:05:34.717Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T08:05:34.750Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:05:34.756Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T08:05:34.766Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:05:34.782Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T08:05:34.791Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-26T08:05:34.803Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:05:34.845Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:05:34.853Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T08:05:34.861Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:05:34.878Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T08:05:34.892Z"
   },
   {
    "duration": 43,
    "start_time": "2021-12-26T08:05:34.919Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T08:05:34.963Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T08:05:34.987Z"
   },
   {
    "duration": 4101,
    "start_time": "2021-12-26T08:05:34.994Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T08:05:39.097Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T08:05:39.110Z"
   },
   {
    "duration": 212,
    "start_time": "2021-12-26T08:07:28.621Z"
   },
   {
    "duration": 57,
    "start_time": "2021-12-26T08:08:57.129Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:08:57.188Z"
   },
   {
    "duration": 43,
    "start_time": "2021-12-26T08:08:57.203Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:08:57.248Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T08:08:57.257Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:08:57.268Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T08:08:57.277Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T08:08:57.293Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:08:57.304Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T08:08:57.342Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:08:57.353Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T08:08:57.363Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:08:57.377Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T08:08:57.386Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:08:57.403Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-26T08:08:57.416Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T08:08:57.452Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:08:57.458Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:08:57.467Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T08:08:57.474Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T08:08:57.497Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:08:57.503Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-26T08:08:57.513Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:08:57.548Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:08:57.556Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T08:08:57.565Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T08:08:57.581Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T08:08:57.592Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T08:08:57.602Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T08:08:57.618Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T08:08:57.643Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T08:08:57.666Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T08:08:57.691Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T08:08:57.712Z"
   },
   {
    "duration": 3930,
    "start_time": "2021-12-26T08:08:57.743Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:09:01.675Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T08:09:01.689Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:09:01.718Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T08:11:03.229Z"
   },
   {
    "duration": 213,
    "start_time": "2021-12-26T08:19:06.025Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T08:19:20.030Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:27:53.534Z"
   },
   {
    "duration": 231,
    "start_time": "2021-12-26T08:37:19.105Z"
   },
   {
    "duration": 244,
    "start_time": "2021-12-26T08:49:00.360Z"
   },
   {
    "duration": 619,
    "start_time": "2021-12-26T08:49:09.854Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T08:49:10.475Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-26T08:49:10.494Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:49:10.543Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:49:10.553Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T08:49:10.560Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:49:10.567Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T08:49:10.580Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T08:49:10.592Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T08:49:10.602Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T08:49:10.613Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T08:49:10.645Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T08:49:10.660Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T08:49:10.668Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T08:49:10.689Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-26T08:49:10.710Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T08:49:10.742Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-26T08:49:10.748Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-26T08:49:10.781Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-26T08:49:10.799Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T08:49:10.834Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T08:49:10.840Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T08:49:10.859Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T08:49:10.886Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T08:49:10.905Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T08:49:10.928Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T08:49:10.953Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T08:49:10.978Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T08:49:10.996Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T08:49:11.021Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-26T08:49:11.048Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T08:49:11.079Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T08:49:11.108Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T08:49:11.128Z"
   },
   {
    "duration": 3970,
    "start_time": "2021-12-26T08:49:11.141Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T08:49:15.113Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-26T08:49:15.126Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T08:49:15.156Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T08:49:15.161Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-26T08:49:15.187Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T08:49:15.244Z"
   },
   {
    "duration": 220,
    "start_time": "2021-12-26T08:49:15.276Z"
   },
   {
    "duration": 525,
    "start_time": "2021-12-26T08:49:14.973Z"
   },
   {
    "duration": 524,
    "start_time": "2021-12-26T08:49:14.975Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T08:49:32.183Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-26T08:49:53.179Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T08:57:26.676Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T08:57:28.067Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T08:57:48.733Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T08:59:18.538Z"
   },
   {
    "duration": 211,
    "start_time": "2021-12-26T09:06:28.737Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-26T09:10:38.233Z"
   },
   {
    "duration": 487,
    "start_time": "2021-12-26T09:13:43.141Z"
   },
   {
    "duration": 5292,
    "start_time": "2021-12-26T09:13:57.788Z"
   },
   {
    "duration": 5318,
    "start_time": "2021-12-26T09:14:19.063Z"
   },
   {
    "duration": 4961,
    "start_time": "2021-12-26T09:15:21.297Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-26T09:16:07.793Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T09:16:07.857Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T09:16:07.871Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T09:16:07.884Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T09:16:07.894Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-26T09:16:07.903Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T09:16:07.943Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T09:16:07.958Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:16:07.972Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:16:07.983Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T09:16:07.994Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-26T09:16:08.006Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T09:16:08.050Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T09:16:08.056Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T09:16:08.069Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T09:16:08.086Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-26T09:16:08.103Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T09:16:08.143Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T09:16:08.150Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T09:16:08.156Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T09:16:08.175Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T09:16:08.180Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T09:16:08.193Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T09:16:08.208Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T09:16:08.219Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T09:16:08.245Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T09:16:08.260Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:16:08.270Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T09:16:08.281Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T09:16:08.300Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T09:16:08.313Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T09:16:08.341Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T09:16:08.363Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T09:16:08.384Z"
   },
   {
    "duration": 3678,
    "start_time": "2021-12-26T09:16:08.391Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-26T09:16:12.071Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T09:16:12.084Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T09:16:12.104Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-26T09:16:12.108Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T09:16:12.144Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-26T09:16:12.149Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-26T09:16:12.170Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-26T09:16:12.196Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-26T09:16:39.834Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-26T09:16:58.011Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T09:18:05.148Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-26T09:19:24.749Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T09:20:59.627Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T09:21:06.492Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-26T09:21:12.845Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-26T09:21:20.701Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T09:29:00.065Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T09:31:19.852Z"
   },
   {
    "duration": 216,
    "start_time": "2021-12-26T09:37:15.135Z"
   },
   {
    "duration": 57,
    "start_time": "2021-12-26T09:41:55.913Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T09:41:55.972Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:41:55.984Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T09:41:55.995Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T09:41:56.003Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-26T09:41:56.010Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-26T09:41:56.045Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:41:56.057Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T09:41:56.068Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T09:41:56.077Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:41:56.094Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-26T09:41:56.105Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T09:41:56.143Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-26T09:41:56.147Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T09:41:56.162Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T09:41:56.176Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T09:41:56.192Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:41:56.197Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T09:41:56.207Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-26T09:41:56.217Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T09:41:56.256Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T09:41:56.261Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-26T09:41:56.272Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:41:56.288Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-26T09:41:56.298Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-26T09:41:56.309Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-26T09:41:56.324Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T09:41:56.343Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-26T09:41:56.349Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-26T09:41:56.368Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T09:41:56.380Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T09:41:56.404Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-26T09:41:56.426Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-26T09:41:56.461Z"
   },
   {
    "duration": 3962,
    "start_time": "2021-12-26T09:41:56.467Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T09:42:00.431Z"
   },
   {
    "duration": 39,
    "start_time": "2021-12-26T09:42:00.454Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-26T09:42:00.495Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-26T09:42:00.500Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T09:42:00.528Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-26T09:42:00.532Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-26T09:42:00.554Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-26T09:42:00.586Z"
   },
   {
    "duration": 436,
    "start_time": "2021-12-26T09:42:17.799Z"
   },
   {
    "duration": 233,
    "start_time": "2021-12-26T09:45:30.715Z"
   },
   {
    "duration": 5007,
    "start_time": "2021-12-26T09:45:40.012Z"
   },
   {
    "duration": 5364,
    "start_time": "2021-12-26T09:46:13.737Z"
   },
   {
    "duration": 206,
    "start_time": "2021-12-26T09:47:16.496Z"
   },
   {
    "duration": 261,
    "start_time": "2021-12-26T09:57:19.222Z"
   },
   {
    "duration": 223,
    "start_time": "2021-12-26T10:06:53.029Z"
   },
   {
    "duration": 259,
    "start_time": "2021-12-26T10:07:04.586Z"
   },
   {
    "duration": 278,
    "start_time": "2021-12-26T10:10:32.318Z"
   },
   {
    "duration": 235,
    "start_time": "2021-12-26T10:12:47.528Z"
   },
   {
    "duration": 433,
    "start_time": "2021-12-26T10:19:09.633Z"
   },
   {
    "duration": 6069,
    "start_time": "2021-12-26T10:20:53.430Z"
   },
   {
    "duration": 5403,
    "start_time": "2021-12-26T10:21:45.429Z"
   },
   {
    "duration": 228,
    "start_time": "2021-12-26T10:22:31.363Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-26T10:23:12.727Z"
   },
   {
    "duration": 390,
    "start_time": "2021-12-26T10:23:16.816Z"
   },
   {
    "duration": 97,
    "start_time": "2021-12-26T10:24:14.881Z"
   },
   {
    "duration": 206,
    "start_time": "2021-12-26T10:25:07.071Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-26T10:25:12.720Z"
   },
   {
    "duration": 412,
    "start_time": "2021-12-26T10:25:16.792Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-26T10:26:16.496Z"
   },
   {
    "duration": 432,
    "start_time": "2021-12-26T10:27:55.509Z"
   },
   {
    "duration": 360,
    "start_time": "2021-12-26T10:36:58.436Z"
   },
   {
    "duration": 198,
    "start_time": "2021-12-26T10:40:46.384Z"
   },
   {
    "duration": 210,
    "start_time": "2021-12-26T10:41:05.443Z"
   },
   {
    "duration": 268,
    "start_time": "2021-12-26T10:42:46.736Z"
   },
   {
    "duration": 205,
    "start_time": "2021-12-26T10:43:48.490Z"
   },
   {
    "duration": 192,
    "start_time": "2021-12-26T10:45:10.155Z"
   },
   {
    "duration": 213,
    "start_time": "2021-12-26T10:47:23.269Z"
   },
   {
    "duration": 303,
    "start_time": "2021-12-26T10:47:52.521Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-26T11:01:07.631Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-26T11:01:08.768Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-26T11:02:26.313Z"
   },
   {
    "duration": 247,
    "start_time": "2021-12-26T11:05:36.754Z"
   },
   {
    "duration": 335,
    "start_time": "2021-12-26T11:06:08.814Z"
   },
   {
    "duration": 342,
    "start_time": "2021-12-26T11:06:40.739Z"
   },
   {
    "duration": 388,
    "start_time": "2021-12-26T11:07:29.873Z"
   },
   {
    "duration": 353,
    "start_time": "2021-12-26T11:07:59.285Z"
   },
   {
    "duration": 284,
    "start_time": "2021-12-26T11:08:49.980Z"
   },
   {
    "duration": 348,
    "start_time": "2021-12-26T11:12:00.933Z"
   },
   {
    "duration": 202,
    "start_time": "2021-12-26T11:13:43.738Z"
   },
   {
    "duration": 347,
    "start_time": "2021-12-26T11:14:35.865Z"
   },
   {
    "duration": 333,
    "start_time": "2021-12-26T11:16:09.253Z"
   },
   {
    "duration": 360,
    "start_time": "2021-12-26T11:19:08.164Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T11:22:07.787Z"
   },
   {
    "duration": 5483,
    "start_time": "2021-12-26T11:23:33.063Z"
   },
   {
    "duration": 5232,
    "start_time": "2021-12-26T11:24:26.645Z"
   },
   {
    "duration": 252,
    "start_time": "2021-12-26T11:25:13.691Z"
   },
   {
    "duration": 243,
    "start_time": "2021-12-26T11:25:21.420Z"
   },
   {
    "duration": 1035,
    "start_time": "2021-12-26T11:26:06.026Z"
   },
   {
    "duration": 331,
    "start_time": "2021-12-26T11:26:25.412Z"
   },
   {
    "duration": 209,
    "start_time": "2021-12-26T11:27:05.946Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T11:27:48.447Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-26T11:29:41.558Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-26T11:30:00.841Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-26T11:30:09.609Z"
   },
   {
    "duration": 212,
    "start_time": "2021-12-26T11:30:16.554Z"
   },
   {
    "duration": 282,
    "start_time": "2021-12-26T11:30:46.998Z"
   },
   {
    "duration": 299,
    "start_time": "2021-12-26T11:40:33.883Z"
   },
   {
    "duration": 254,
    "start_time": "2021-12-26T11:41:29.547Z"
   },
   {
    "duration": 331,
    "start_time": "2021-12-26T11:41:50.828Z"
   },
   {
    "duration": 247,
    "start_time": "2021-12-26T11:41:56.301Z"
   },
   {
    "duration": 277,
    "start_time": "2021-12-26T11:42:40.803Z"
   },
   {
    "duration": 224,
    "start_time": "2021-12-26T11:45:52.132Z"
   },
   {
    "duration": 275,
    "start_time": "2021-12-26T11:48:39.105Z"
   },
   {
    "duration": 257,
    "start_time": "2021-12-26T11:51:18.486Z"
   },
   {
    "duration": 862,
    "start_time": "2021-12-27T07:03:22.512Z"
   },
   {
    "duration": 111,
    "start_time": "2021-12-27T07:03:23.378Z"
   },
   {
    "duration": 39,
    "start_time": "2021-12-27T07:03:23.493Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-27T07:03:23.535Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T07:03:27.432Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-27T07:20:01.594Z"
   },
   {
    "duration": 92,
    "start_time": "2021-12-27T07:20:01.600Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T07:20:01.695Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-27T07:20:01.715Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-27T07:20:01.740Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-27T07:20:01.768Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T07:20:01.794Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-27T07:20:01.807Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T07:20:04.564Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-27T07:27:41.638Z"
   },
   {
    "duration": 76,
    "start_time": "2021-12-27T07:27:41.645Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T07:27:41.724Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-27T07:27:41.744Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T07:27:41.772Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T07:27:41.782Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T07:27:41.795Z"
   },
   {
    "duration": 63,
    "start_time": "2021-12-27T07:27:41.811Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T07:27:41.877Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T07:27:41.896Z"
   },
   {
    "duration": 49,
    "start_time": "2021-12-27T07:27:41.918Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T07:27:41.970Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T07:27:41.992Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T07:27:42.000Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T07:27:44.551Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-27T07:34:59.707Z"
   },
   {
    "duration": 77,
    "start_time": "2021-12-27T07:34:59.713Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T07:34:59.793Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T07:34:59.812Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T07:34:59.830Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T07:34:59.864Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T07:34:59.877Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T07:34:59.893Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T07:34:59.911Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T07:34:59.964Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T07:34:59.982Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T07:34:59.995Z"
   },
   {
    "duration": 47,
    "start_time": "2021-12-27T07:35:00.016Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-27T07:35:00.065Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-27T07:35:00.094Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-27T07:35:00.117Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-27T07:35:00.141Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T07:35:00.171Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T07:35:00.183Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-27T07:35:18.594Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-27T07:53:40.802Z"
   },
   {
    "duration": 75,
    "start_time": "2021-12-27T07:53:40.808Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T07:53:40.887Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T07:53:40.907Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T07:53:40.922Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T07:53:40.963Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T07:53:40.977Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T07:53:40.990Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T07:53:41.008Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T07:53:41.063Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T07:53:41.081Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-27T07:53:41.094Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-27T07:53:41.118Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T07:53:41.165Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T07:53:41.185Z"
   },
   {
    "duration": 63,
    "start_time": "2021-12-27T07:53:41.203Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T07:53:41.269Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T07:53:41.279Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T07:53:41.298Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-27T07:53:41.306Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T07:53:41.373Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T07:53:41.383Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T07:53:41.391Z"
   },
   {
    "duration": 52,
    "start_time": "2021-12-27T07:53:41.411Z"
   },
   {
    "duration": 3,
    "start_time": "2021-12-27T08:04:15.692Z"
   },
   {
    "duration": 78,
    "start_time": "2021-12-27T08:04:15.698Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T08:04:15.780Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T08:04:15.803Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-27T08:04:15.820Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T08:04:15.870Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T08:04:15.885Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T08:04:15.897Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-27T08:04:15.919Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T08:04:15.967Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T08:04:15.985Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T08:04:16.000Z"
   },
   {
    "duration": 44,
    "start_time": "2021-12-27T08:04:16.020Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T08:04:16.066Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T08:04:16.088Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-27T08:04:16.106Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T08:04:16.171Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T08:04:16.179Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T08:04:16.191Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-27T08:04:16.201Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T08:04:16.264Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T08:04:16.274Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T08:04:16.283Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T08:04:16.302Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-27T08:04:16.313Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T08:04:16.366Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T08:04:16.387Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T08:04:16.403Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-27T08:04:16.413Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T08:04:16.466Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-27T08:04:16.478Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-27T08:04:16.511Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-27T08:04:16.579Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T08:14:28.132Z"
   },
   {
    "duration": 75,
    "start_time": "2021-12-27T08:14:28.144Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-27T08:14:28.222Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T08:14:28.266Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T08:14:28.281Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T08:14:28.292Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T08:14:28.305Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-27T08:14:28.319Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T08:14:28.382Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T08:14:28.400Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-27T08:14:28.419Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T08:14:28.468Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T08:14:28.489Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T08:14:28.498Z"
   },
   {
    "duration": 52,
    "start_time": "2021-12-27T08:14:28.519Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-27T08:14:28.575Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T08:14:28.602Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-27T08:14:28.611Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T08:14:28.672Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-27T08:14:28.680Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T08:14:28.708Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T08:14:28.716Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T08:14:28.763Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T08:14:28.783Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T08:14:28.793Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T08:14:28.802Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T08:14:28.866Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T08:14:28.877Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T08:14:28.893Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T08:14:28.913Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-27T08:14:28.927Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-27T08:14:28.995Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-27T08:14:29.031Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T08:14:29.087Z"
   },
   {
    "duration": 6073,
    "start_time": "2021-12-27T08:14:29.098Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T08:14:35.174Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T08:14:35.509Z"
   },
   {
    "duration": 554,
    "start_time": "2021-12-27T08:27:06.340Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T08:29:50.070Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-27T08:34:19.897Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-27T08:34:47.028Z"
   },
   {
    "duration": 368,
    "start_time": "2021-12-27T08:39:14.540Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-27T08:39:26.144Z"
   },
   {
    "duration": 301,
    "start_time": "2021-12-27T08:42:38.992Z"
   },
   {
    "duration": 100,
    "start_time": "2021-12-27T08:43:11.823Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-27T08:43:18.278Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-27T08:53:33.348Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T08:58:59.770Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-27T08:59:00.793Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-27T09:03:17.232Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-27T09:04:30.012Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-27T09:04:53.551Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-27T09:24:05.603Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-27T09:25:06.052Z"
   },
   {
    "duration": 634,
    "start_time": "2021-12-27T09:26:03.821Z"
   },
   {
    "duration": 78,
    "start_time": "2021-12-27T09:26:04.459Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-27T09:26:04.540Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T09:26:04.565Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T09:26:04.580Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T09:26:04.592Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T09:26:04.607Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-27T09:26:04.621Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T09:26:04.680Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T09:26:04.694Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-27T09:26:04.713Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-27T09:26:04.766Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T09:26:04.789Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-27T09:26:04.799Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-27T09:26:04.823Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-27T09:26:04.881Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T09:26:04.907Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-27T09:26:04.918Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T09:26:04.973Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-27T09:26:04.982Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T09:26:05.006Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-27T09:26:05.015Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-27T09:26:05.071Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T09:26:05.097Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T09:26:05.107Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-27T09:26:05.121Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T09:26:05.178Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T09:26:05.191Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T09:26:05.200Z"
   },
   {
    "duration": 47,
    "start_time": "2021-12-27T09:26:05.220Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-27T09:26:05.270Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-27T09:26:05.303Z"
   },
   {
    "duration": 52,
    "start_time": "2021-12-27T09:26:05.339Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T09:26:05.393Z"
   },
   {
    "duration": 5912,
    "start_time": "2021-12-27T09:26:05.403Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-27T09:26:11.318Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-27T09:26:11.343Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T09:26:11.410Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-27T09:26:11.418Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-27T09:26:11.476Z"
   },
   {
    "duration": 61,
    "start_time": "2021-12-27T09:26:11.524Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-27T09:26:11.588Z"
   },
   {
    "duration": 516,
    "start_time": "2021-12-27T09:26:11.639Z"
   },
   {
    "duration": 43,
    "start_time": "2021-12-27T09:41:40.141Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T09:47:37.553Z"
   },
   {
    "duration": 486,
    "start_time": "2021-12-27T09:47:39.118Z"
   },
   {
    "duration": 470,
    "start_time": "2021-12-27T09:48:00.608Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-27T09:52:37.500Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-27T10:07:10.605Z"
   },
   {
    "duration": 75,
    "start_time": "2021-12-27T10:07:10.636Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T10:07:10.714Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-27T10:07:10.733Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T10:07:10.773Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T10:07:10.784Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T10:07:10.797Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-27T10:07:10.811Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T10:07:10.870Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T10:07:10.886Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T10:07:10.907Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-27T10:07:10.921Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T10:07:10.978Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T10:07:10.988Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T10:07:11.009Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-27T10:07:11.027Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T10:07:11.083Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T10:07:11.092Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T10:07:11.104Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-27T10:07:11.115Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T10:07:11.180Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T10:07:11.190Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T10:07:11.200Z"
   },
   {
    "duration": 44,
    "start_time": "2021-12-27T10:07:11.220Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T10:07:11.267Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T10:07:11.279Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T10:07:11.297Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T10:07:11.309Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-27T10:07:11.318Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T10:07:11.376Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-27T10:07:11.390Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-27T10:07:11.422Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-27T10:07:11.490Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T10:07:11.523Z"
   },
   {
    "duration": 5895,
    "start_time": "2021-12-27T10:07:11.533Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-27T10:07:17.431Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-27T10:07:17.469Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T10:07:17.522Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-27T10:07:17.531Z"
   },
   {
    "duration": 77,
    "start_time": "2021-12-27T10:07:17.594Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-27T10:07:17.674Z"
   },
   {
    "duration": 63,
    "start_time": "2021-12-27T10:07:17.717Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-27T10:07:17.783Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-27T11:34:48.522Z"
   },
   {
    "duration": 81,
    "start_time": "2021-12-27T11:34:48.563Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-27T11:34:48.647Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T11:34:48.686Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T11:34:48.707Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-27T11:34:48.721Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T11:34:48.775Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T11:34:48.794Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-27T11:34:48.818Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T11:34:48.869Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T11:34:48.891Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-27T11:34:48.906Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T11:34:48.968Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-27T11:34:48.978Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-27T11:34:49.005Z"
   },
   {
    "duration": 70,
    "start_time": "2021-12-27T11:34:49.021Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T11:34:49.093Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T11:34:49.104Z"
   },
   {
    "duration": 47,
    "start_time": "2021-12-27T11:34:49.116Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T11:34:49.168Z"
   },
   {
    "duration": 25,
    "start_time": "2021-12-27T11:34:49.189Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-27T11:34:49.217Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T11:34:49.275Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T11:34:49.286Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T11:34:49.311Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T11:34:49.366Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T11:34:49.378Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T11:34:49.400Z"
   },
   {
    "duration": 78,
    "start_time": "2021-12-27T11:34:49.416Z"
   },
   {
    "duration": 36,
    "start_time": "2021-12-27T11:34:49.498Z"
   },
   {
    "duration": 63,
    "start_time": "2021-12-27T11:34:49.537Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T11:34:49.604Z"
   },
   {
    "duration": 8169,
    "start_time": "2021-12-27T11:34:49.619Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-27T11:34:57.791Z"
   },
   {
    "duration": 85,
    "start_time": "2021-12-27T11:34:57.816Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T11:34:57.904Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-27T11:34:57.913Z"
   },
   {
    "duration": 52,
    "start_time": "2021-12-27T11:35:06.590Z"
   },
   {
    "duration": 45,
    "start_time": "2021-12-27T11:35:25.751Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-27T11:38:03.987Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-27T11:39:48.768Z"
   },
   {
    "duration": 38,
    "start_time": "2021-12-27T11:42:23.196Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-27T11:45:20.766Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-27T11:45:55.009Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-27T11:46:03.635Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-27T11:46:08.358Z"
   },
   {
    "duration": 39,
    "start_time": "2021-12-27T11:46:20.477Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-27T12:12:16.038Z"
   },
   {
    "duration": 92,
    "start_time": "2021-12-27T12:12:16.072Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T12:12:16.167Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T12:12:16.187Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T12:12:16.202Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-27T12:12:16.213Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T12:12:16.267Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-27T12:12:16.282Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T12:12:16.308Z"
   },
   {
    "duration": 44,
    "start_time": "2021-12-27T12:12:16.323Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T12:12:16.370Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T12:12:16.382Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T12:12:16.402Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-27T12:12:16.411Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-27T12:12:16.467Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-27T12:12:16.485Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T12:12:16.511Z"
   },
   {
    "duration": 49,
    "start_time": "2021-12-27T12:12:16.520Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T12:12:16.571Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-27T12:12:16.581Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-27T12:12:16.616Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T12:12:16.664Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T12:12:16.681Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-27T12:12:16.691Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T12:12:16.713Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T12:12:16.764Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-27T12:12:16.777Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T12:12:16.801Z"
   },
   {
    "duration": 73,
    "start_time": "2021-12-27T12:12:16.815Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-27T12:12:16.891Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-27T12:12:16.929Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T12:12:16.991Z"
   },
   {
    "duration": 5916,
    "start_time": "2021-12-27T12:12:17.005Z"
   },
   {
    "duration": 40,
    "start_time": "2021-12-27T12:12:22.924Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-27T12:12:22.967Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-27T12:12:23.019Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-27T12:12:23.025Z"
   },
   {
    "duration": 46,
    "start_time": "2021-12-27T12:12:23.086Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-27T12:12:23.134Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-27T12:12:23.197Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-27T12:12:23.236Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-27T12:12:30.974Z"
   },
   {
    "duration": 101,
    "start_time": "2021-12-27T12:12:31.010Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T12:12:31.114Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-27T12:12:31.134Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T12:12:31.167Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-27T12:12:31.178Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-27T12:12:31.201Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-27T12:12:31.218Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-27T12:12:31.269Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-27T12:12:31.283Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-27T12:12:31.304Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-27T12:12:31.316Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-27T12:12:31.374Z"
   },
   {
    "duration": 24,
    "start_time": "2021-12-27T12:12:31.397Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-27T12:12:31.423Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-27T12:12:31.443Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T12:12:31.480Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T12:12:31.489Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T12:12:31.501Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-27T12:12:31.509Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-27T12:12:31.574Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T12:12:31.606Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-27T12:12:31.618Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-27T12:12:31.626Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-27T12:12:31.679Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-27T12:12:31.688Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-27T12:12:31.700Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-27T12:12:31.718Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-27T12:12:31.762Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-27T12:12:31.796Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-27T12:12:31.831Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-27T12:12:31.887Z"
   },
   {
    "duration": 5856,
    "start_time": "2021-12-27T12:12:31.898Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-27T12:12:37.764Z"
   },
   {
    "duration": 57,
    "start_time": "2021-12-27T12:12:37.787Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-27T12:12:37.862Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-27T12:12:37.869Z"
   },
   {
    "duration": 70,
    "start_time": "2021-12-27T12:12:37.902Z"
   },
   {
    "duration": 43,
    "start_time": "2021-12-27T12:12:37.974Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-27T12:12:38.019Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-27T12:12:38.084Z"
   },
   {
    "duration": 796,
    "start_time": "2021-12-28T10:16:27.326Z"
   },
   {
    "duration": 82,
    "start_time": "2021-12-28T10:16:28.125Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-28T10:16:28.210Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-28T10:16:28.242Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-28T10:16:28.271Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-28T10:16:28.282Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-28T10:16:28.296Z"
   },
   {
    "duration": 61,
    "start_time": "2021-12-28T10:16:28.308Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-28T10:16:28.373Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-28T10:16:28.390Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-28T10:16:28.410Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-28T10:16:28.459Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-28T10:16:28.480Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-28T10:16:28.488Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-28T10:16:28.512Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-28T10:16:28.568Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-28T10:16:28.593Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-28T10:16:28.601Z"
   },
   {
    "duration": 47,
    "start_time": "2021-12-28T10:16:28.613Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-28T10:16:28.662Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-28T10:16:28.682Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-28T10:16:28.712Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-28T10:16:28.760Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-28T10:16:28.768Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-28T10:16:28.788Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-28T10:16:28.797Z"
   },
   {
    "duration": 64,
    "start_time": "2021-12-28T10:16:28.809Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-28T10:16:28.876Z"
   },
   {
    "duration": 66,
    "start_time": "2021-12-28T10:16:28.894Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-28T10:16:28.963Z"
   },
   {
    "duration": 63,
    "start_time": "2021-12-28T10:16:29.014Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-28T10:16:29.080Z"
   },
   {
    "duration": 6759,
    "start_time": "2021-12-28T10:16:29.095Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-28T10:16:35.857Z"
   },
   {
    "duration": 48,
    "start_time": "2021-12-28T10:16:35.880Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-28T10:16:35.931Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-28T10:16:35.962Z"
   },
   {
    "duration": 68,
    "start_time": "2021-12-28T10:16:35.994Z"
   },
   {
    "duration": 42,
    "start_time": "2021-12-28T10:16:36.064Z"
   },
   {
    "duration": 68,
    "start_time": "2021-12-28T10:16:36.109Z"
   },
   {
    "duration": 36,
    "start_time": "2021-12-28T10:16:36.180Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-28T10:22:46.957Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-28T10:24:37.372Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-28T10:24:51.999Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-28T10:25:04.514Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-28T10:25:23.864Z"
   },
   {
    "duration": 386,
    "start_time": "2021-12-29T05:41:19.914Z"
   },
   {
    "duration": 726,
    "start_time": "2021-12-29T05:41:28.294Z"
   },
   {
    "duration": 75,
    "start_time": "2021-12-29T05:41:29.023Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-29T05:41:29.101Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-29T05:41:29.130Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-29T05:41:29.163Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-29T05:41:29.174Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-29T05:41:29.191Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-29T05:41:29.205Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-29T05:41:29.264Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-29T05:41:29.278Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-29T05:41:29.296Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-29T05:41:29.309Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-29T05:41:29.370Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-29T05:41:29.379Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-29T05:41:29.400Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-29T05:41:29.416Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-29T05:41:29.473Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-29T05:41:29.481Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-29T05:41:29.493Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-29T05:41:29.500Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-29T05:41:29.562Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-29T05:41:29.586Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-29T05:41:29.598Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-29T05:41:29.605Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-29T05:41:29.663Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-29T05:41:29.673Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-29T05:41:29.683Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-29T05:41:29.700Z"
   },
   {
    "duration": 69,
    "start_time": "2021-12-29T05:41:29.713Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-29T05:41:29.785Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-29T05:41:29.820Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-29T05:41:29.878Z"
   },
   {
    "duration": 6678,
    "start_time": "2021-12-29T05:41:29.888Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-29T05:41:36.569Z"
   },
   {
    "duration": 70,
    "start_time": "2021-12-29T05:41:36.593Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-29T05:41:36.666Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-29T05:41:36.706Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-29T05:41:36.714Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-29T05:41:36.779Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-29T05:41:36.816Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-29T05:41:36.860Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-29T05:41:36.894Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-29T05:41:36.911Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-29T05:41:36.971Z"
   },
   {
    "duration": 23,
    "start_time": "2021-12-29T05:41:36.989Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-29T05:41:37.014Z"
   },
   {
    "duration": 26,
    "start_time": "2021-12-29T05:41:44.975Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-29T05:42:19.372Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-29T05:44:07.200Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-29T05:45:05.290Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-29T05:45:37.303Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-29T05:49:05.083Z"
   },
   {
    "duration": 86,
    "start_time": "2021-12-29T05:49:05.121Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-29T05:49:05.210Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-29T05:49:05.231Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-29T05:49:05.268Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-29T05:49:05.280Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-29T05:49:05.294Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-29T05:49:05.308Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-29T05:49:05.367Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-29T05:49:05.381Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-29T05:49:05.399Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-29T05:49:05.413Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-29T05:49:05.468Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-29T05:49:05.479Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-29T05:49:05.501Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-29T05:49:05.518Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-29T05:49:05.570Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-29T05:49:05.578Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-29T05:49:05.589Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-29T05:49:05.597Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-29T05:49:05.619Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-29T05:49:05.682Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-29T05:49:05.694Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-29T05:49:05.704Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-29T05:49:05.764Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-29T05:49:05.775Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-29T05:49:05.786Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-29T05:49:05.804Z"
   },
   {
    "duration": 67,
    "start_time": "2021-12-29T05:49:05.817Z"
   },
   {
    "duration": 33,
    "start_time": "2021-12-29T05:49:05.886Z"
   },
   {
    "duration": 55,
    "start_time": "2021-12-29T05:49:05.921Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-29T05:49:05.978Z"
   },
   {
    "duration": 6214,
    "start_time": "2021-12-29T05:49:05.989Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-29T05:49:12.206Z"
   },
   {
    "duration": 65,
    "start_time": "2021-12-29T05:49:12.229Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-29T05:49:12.297Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-29T05:49:12.334Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-29T05:49:12.359Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-29T05:49:12.391Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-29T05:49:12.458Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-29T05:49:12.475Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-29T05:49:12.514Z"
   },
   {
    "duration": 58,
    "start_time": "2021-12-29T05:49:12.530Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-29T05:49:12.590Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-29T05:49:12.607Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-29T05:49:12.664Z"
   },
   {
    "duration": 589,
    "start_time": "2021-12-30T06:41:41.845Z"
   },
   {
    "duration": 931,
    "start_time": "2021-12-30T06:41:49.095Z"
   },
   {
    "duration": 79,
    "start_time": "2021-12-30T06:41:50.029Z"
   },
   {
    "duration": 28,
    "start_time": "2021-12-30T06:41:50.111Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-30T06:41:50.142Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:41:50.173Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-30T06:41:50.185Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:41:50.205Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-30T06:41:50.220Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-30T06:41:50.274Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-30T06:41:50.288Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:41:50.308Z"
   },
   {
    "duration": 18,
    "start_time": "2021-12-30T06:41:50.360Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-30T06:41:50.381Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-30T06:41:50.388Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-30T06:41:50.411Z"
   },
   {
    "duration": 22,
    "start_time": "2021-12-30T06:41:50.459Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-30T06:41:50.484Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:41:50.491Z"
   },
   {
    "duration": 12,
    "start_time": "2021-12-30T06:41:50.504Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-30T06:41:50.518Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-30T06:41:50.571Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:41:50.604Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-30T06:41:50.619Z"
   },
   {
    "duration": 39,
    "start_time": "2021-12-30T06:41:50.633Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-30T06:41:50.675Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-30T06:41:50.685Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-30T06:41:50.715Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-30T06:41:50.737Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-30T06:41:50.770Z"
   },
   {
    "duration": 60,
    "start_time": "2021-12-30T06:41:50.809Z"
   },
   {
    "duration": 29,
    "start_time": "2021-12-30T06:41:50.871Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-30T06:41:50.902Z"
   },
   {
    "duration": 6279,
    "start_time": "2021-12-30T06:41:50.912Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-30T06:41:57.194Z"
   },
   {
    "duration": 70,
    "start_time": "2021-12-30T06:41:57.217Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-30T06:41:57.289Z"
   },
   {
    "duration": 4,
    "start_time": "2021-12-30T06:41:57.328Z"
   },
   {
    "duration": 51,
    "start_time": "2021-12-30T06:41:57.334Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-30T06:41:57.388Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-30T06:41:57.426Z"
   },
   {
    "duration": 35,
    "start_time": "2021-12-30T06:41:57.469Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-30T06:42:03.864Z"
   },
   {
    "duration": 692,
    "start_time": "2021-12-30T06:42:33.263Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-30T06:42:39.936Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-30T06:42:41.535Z"
   },
   {
    "duration": 27,
    "start_time": "2021-12-30T06:42:44.608Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-30T06:42:50.776Z"
   },
   {
    "duration": 107,
    "start_time": "2021-12-30T06:46:56.876Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-30T06:47:00.041Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-30T06:49:48.926Z"
   },
   {
    "duration": 30,
    "start_time": "2021-12-30T06:59:24.702Z"
   },
   {
    "duration": 76,
    "start_time": "2021-12-30T06:59:24.735Z"
   },
   {
    "duration": 17,
    "start_time": "2021-12-30T06:59:24.814Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-30T06:59:24.834Z"
   },
   {
    "duration": 11,
    "start_time": "2021-12-30T06:59:24.873Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-30T06:59:24.886Z"
   },
   {
    "duration": 9,
    "start_time": "2021-12-30T06:59:24.901Z"
   },
   {
    "duration": 56,
    "start_time": "2021-12-30T06:59:24.912Z"
   },
   {
    "duration": 13,
    "start_time": "2021-12-30T06:59:24.972Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-30T06:59:24.988Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:59:25.006Z"
   },
   {
    "duration": 53,
    "start_time": "2021-12-30T06:59:25.019Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-30T06:59:25.074Z"
   },
   {
    "duration": 19,
    "start_time": "2021-12-30T06:59:25.081Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-30T06:59:25.103Z"
   },
   {
    "duration": 52,
    "start_time": "2021-12-30T06:59:25.122Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-30T06:59:25.177Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:59:25.185Z"
   },
   {
    "duration": 5,
    "start_time": "2021-12-30T06:59:25.198Z"
   },
   {
    "duration": 54,
    "start_time": "2021-12-30T06:59:25.205Z"
   },
   {
    "duration": 21,
    "start_time": "2021-12-30T06:59:25.262Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-30T06:59:25.285Z"
   },
   {
    "duration": 6,
    "start_time": "2021-12-30T06:59:25.295Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-30T06:59:25.304Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-30T06:59:25.366Z"
   },
   {
    "duration": 8,
    "start_time": "2021-12-30T06:59:25.376Z"
   },
   {
    "duration": 16,
    "start_time": "2021-12-30T06:59:25.389Z"
   },
   {
    "duration": 10,
    "start_time": "2021-12-30T06:59:25.408Z"
   },
   {
    "duration": 62,
    "start_time": "2021-12-30T06:59:25.420Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-30T06:59:25.484Z"
   },
   {
    "duration": 59,
    "start_time": "2021-12-30T06:59:25.517Z"
   },
   {
    "duration": 7,
    "start_time": "2021-12-30T06:59:25.579Z"
   },
   {
    "duration": 6102,
    "start_time": "2021-12-30T06:59:25.588Z"
   },
   {
    "duration": 20,
    "start_time": "2021-12-30T06:59:31.693Z"
   },
   {
    "duration": 68,
    "start_time": "2021-12-30T06:59:31.716Z"
   },
   {
    "duration": 37,
    "start_time": "2021-12-30T06:59:31.787Z"
   },
   {
    "duration": 31,
    "start_time": "2021-12-30T06:59:31.827Z"
   },
   {
    "duration": 32,
    "start_time": "2021-12-30T06:59:31.861Z"
   },
   {
    "duration": 67,
    "start_time": "2021-12-30T06:59:31.896Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-30T06:59:31.966Z"
   },
   {
    "duration": 34,
    "start_time": "2021-12-30T06:59:31.983Z"
   },
   {
    "duration": 41,
    "start_time": "2021-12-30T06:59:32.020Z"
   },
   {
    "duration": 44,
    "start_time": "2021-12-30T06:59:32.063Z"
   },
   {
    "duration": 15,
    "start_time": "2021-12-30T06:59:32.110Z"
   },
   {
    "duration": 50,
    "start_time": "2021-12-30T06:59:32.128Z"
   },
   {
    "duration": 14,
    "start_time": "2021-12-30T06:59:32.180Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "292px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
